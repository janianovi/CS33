
bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000400ae8 <_init>:
  400ae8:	48 83 ec 08          	sub    $0x8,%rsp
  400aec:	48 8b 05 05 35 20 00 	mov    0x203505(%rip),%rax        # 603ff8 <__gmon_start__>
  400af3:	48 85 c0             	test   %rax,%rax
  400af6:	74 05                	je     400afd <_init+0x15>
  400af8:	e8 d3 01 00 00       	callq  400cd0 <.plt.got>
  400afd:	48 83 c4 08          	add    $0x8,%rsp
  400b01:	c3                   	retq   

Disassembly of section .plt:

0000000000400b10 <.plt>:
  400b10:	ff 35 f2 34 20 00    	pushq  0x2034f2(%rip)        # 604008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400b16:	ff 25 f4 34 20 00    	jmpq   *0x2034f4(%rip)        # 604010 <_GLOBAL_OFFSET_TABLE_+0x10>
  400b1c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400b20 <getenv@plt>:
  400b20:	ff 25 f2 34 20 00    	jmpq   *0x2034f2(%rip)        # 604018 <getenv@GLIBC_2.2.5>
  400b26:	68 00 00 00 00       	pushq  $0x0
  400b2b:	e9 e0 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b30 <strcasecmp@plt>:
  400b30:	ff 25 ea 34 20 00    	jmpq   *0x2034ea(%rip)        # 604020 <strcasecmp@GLIBC_2.2.5>
  400b36:	68 01 00 00 00       	pushq  $0x1
  400b3b:	e9 d0 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b40 <__errno_location@plt>:
  400b40:	ff 25 e2 34 20 00    	jmpq   *0x2034e2(%rip)        # 604028 <__errno_location@GLIBC_2.2.5>
  400b46:	68 02 00 00 00       	pushq  $0x2
  400b4b:	e9 c0 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b50 <strcpy@plt>:
  400b50:	ff 25 da 34 20 00    	jmpq   *0x2034da(%rip)        # 604030 <strcpy@GLIBC_2.2.5>
  400b56:	68 03 00 00 00       	pushq  $0x3
  400b5b:	e9 b0 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b60 <puts@plt>:
  400b60:	ff 25 d2 34 20 00    	jmpq   *0x2034d2(%rip)        # 604038 <puts@GLIBC_2.2.5>
  400b66:	68 04 00 00 00       	pushq  $0x4
  400b6b:	e9 a0 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b70 <write@plt>:
  400b70:	ff 25 ca 34 20 00    	jmpq   *0x2034ca(%rip)        # 604040 <write@GLIBC_2.2.5>
  400b76:	68 05 00 00 00       	pushq  $0x5
  400b7b:	e9 90 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b80 <printf@plt>:
  400b80:	ff 25 c2 34 20 00    	jmpq   *0x2034c2(%rip)        # 604048 <printf@GLIBC_2.2.5>
  400b86:	68 06 00 00 00       	pushq  $0x6
  400b8b:	e9 80 ff ff ff       	jmpq   400b10 <.plt>

0000000000400b90 <alarm@plt>:
  400b90:	ff 25 ba 34 20 00    	jmpq   *0x2034ba(%rip)        # 604050 <alarm@GLIBC_2.2.5>
  400b96:	68 07 00 00 00       	pushq  $0x7
  400b9b:	e9 70 ff ff ff       	jmpq   400b10 <.plt>

0000000000400ba0 <close@plt>:
  400ba0:	ff 25 b2 34 20 00    	jmpq   *0x2034b2(%rip)        # 604058 <close@GLIBC_2.2.5>
  400ba6:	68 08 00 00 00       	pushq  $0x8
  400bab:	e9 60 ff ff ff       	jmpq   400b10 <.plt>

0000000000400bb0 <read@plt>:
  400bb0:	ff 25 aa 34 20 00    	jmpq   *0x2034aa(%rip)        # 604060 <read@GLIBC_2.2.5>
  400bb6:	68 09 00 00 00       	pushq  $0x9
  400bbb:	e9 50 ff ff ff       	jmpq   400b10 <.plt>

0000000000400bc0 <__libc_start_main@plt>:
  400bc0:	ff 25 a2 34 20 00    	jmpq   *0x2034a2(%rip)        # 604068 <__libc_start_main@GLIBC_2.2.5>
  400bc6:	68 0a 00 00 00       	pushq  $0xa
  400bcb:	e9 40 ff ff ff       	jmpq   400b10 <.plt>

0000000000400bd0 <fgets@plt>:
  400bd0:	ff 25 9a 34 20 00    	jmpq   *0x20349a(%rip)        # 604070 <fgets@GLIBC_2.2.5>
  400bd6:	68 0b 00 00 00       	pushq  $0xb
  400bdb:	e9 30 ff ff ff       	jmpq   400b10 <.plt>

0000000000400be0 <signal@plt>:
  400be0:	ff 25 92 34 20 00    	jmpq   *0x203492(%rip)        # 604078 <signal@GLIBC_2.2.5>
  400be6:	68 0c 00 00 00       	pushq  $0xc
  400beb:	e9 20 ff ff ff       	jmpq   400b10 <.plt>

0000000000400bf0 <gethostbyname@plt>:
  400bf0:	ff 25 8a 34 20 00    	jmpq   *0x20348a(%rip)        # 604080 <gethostbyname@GLIBC_2.2.5>
  400bf6:	68 0d 00 00 00       	pushq  $0xd
  400bfb:	e9 10 ff ff ff       	jmpq   400b10 <.plt>

0000000000400c00 <fprintf@plt>:
  400c00:	ff 25 82 34 20 00    	jmpq   *0x203482(%rip)        # 604088 <fprintf@GLIBC_2.2.5>
  400c06:	68 0e 00 00 00       	pushq  $0xe
  400c0b:	e9 00 ff ff ff       	jmpq   400b10 <.plt>

0000000000400c10 <strtol@plt>:
  400c10:	ff 25 7a 34 20 00    	jmpq   *0x20347a(%rip)        # 604090 <strtol@GLIBC_2.2.5>
  400c16:	68 0f 00 00 00       	pushq  $0xf
  400c1b:	e9 f0 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c20 <fflush@plt>:
  400c20:	ff 25 72 34 20 00    	jmpq   *0x203472(%rip)        # 604098 <fflush@GLIBC_2.2.5>
  400c26:	68 10 00 00 00       	pushq  $0x10
  400c2b:	e9 e0 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c30 <__isoc99_sscanf@plt>:
  400c30:	ff 25 6a 34 20 00    	jmpq   *0x20346a(%rip)        # 6040a0 <__isoc99_sscanf@GLIBC_2.7>
  400c36:	68 11 00 00 00       	pushq  $0x11
  400c3b:	e9 d0 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c40 <memmove@plt>:
  400c40:	ff 25 62 34 20 00    	jmpq   *0x203462(%rip)        # 6040a8 <memmove@GLIBC_2.2.5>
  400c46:	68 12 00 00 00       	pushq  $0x12
  400c4b:	e9 c0 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c50 <fopen@plt>:
  400c50:	ff 25 5a 34 20 00    	jmpq   *0x20345a(%rip)        # 6040b0 <fopen@GLIBC_2.2.5>
  400c56:	68 13 00 00 00       	pushq  $0x13
  400c5b:	e9 b0 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c60 <gethostname@plt>:
  400c60:	ff 25 52 34 20 00    	jmpq   *0x203452(%rip)        # 6040b8 <gethostname@GLIBC_2.2.5>
  400c66:	68 14 00 00 00       	pushq  $0x14
  400c6b:	e9 a0 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c70 <sprintf@plt>:
  400c70:	ff 25 4a 34 20 00    	jmpq   *0x20344a(%rip)        # 6040c0 <sprintf@GLIBC_2.2.5>
  400c76:	68 15 00 00 00       	pushq  $0x15
  400c7b:	e9 90 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c80 <exit@plt>:
  400c80:	ff 25 42 34 20 00    	jmpq   *0x203442(%rip)        # 6040c8 <exit@GLIBC_2.2.5>
  400c86:	68 16 00 00 00       	pushq  $0x16
  400c8b:	e9 80 fe ff ff       	jmpq   400b10 <.plt>

0000000000400c90 <connect@plt>:
  400c90:	ff 25 3a 34 20 00    	jmpq   *0x20343a(%rip)        # 6040d0 <connect@GLIBC_2.2.5>
  400c96:	68 17 00 00 00       	pushq  $0x17
  400c9b:	e9 70 fe ff ff       	jmpq   400b10 <.plt>

0000000000400ca0 <sleep@plt>:
  400ca0:	ff 25 32 34 20 00    	jmpq   *0x203432(%rip)        # 6040d8 <sleep@GLIBC_2.2.5>
  400ca6:	68 18 00 00 00       	pushq  $0x18
  400cab:	e9 60 fe ff ff       	jmpq   400b10 <.plt>

0000000000400cb0 <__ctype_b_loc@plt>:
  400cb0:	ff 25 2a 34 20 00    	jmpq   *0x20342a(%rip)        # 6040e0 <__ctype_b_loc@GLIBC_2.3>
  400cb6:	68 19 00 00 00       	pushq  $0x19
  400cbb:	e9 50 fe ff ff       	jmpq   400b10 <.plt>

0000000000400cc0 <socket@plt>:
  400cc0:	ff 25 22 34 20 00    	jmpq   *0x203422(%rip)        # 6040e8 <socket@GLIBC_2.2.5>
  400cc6:	68 1a 00 00 00       	pushq  $0x1a
  400ccb:	e9 40 fe ff ff       	jmpq   400b10 <.plt>

Disassembly of section .plt.got:

0000000000400cd0 <.plt.got>:
  400cd0:	ff 25 22 33 20 00    	jmpq   *0x203322(%rip)        # 603ff8 <__gmon_start__>
  400cd6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000400ce0 <_start>:
  400ce0:	31 ed                	xor    %ebp,%ebp
  400ce2:	49 89 d1             	mov    %rdx,%r9
  400ce5:	5e                   	pop    %rsi
  400ce6:	48 89 e2             	mov    %rsp,%rdx
  400ce9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400ced:	50                   	push   %rax
  400cee:	54                   	push   %rsp
  400cef:	49 c7 c0 00 29 40 00 	mov    $0x402900,%r8
  400cf6:	48 c7 c1 90 28 40 00 	mov    $0x402890,%rcx
  400cfd:	48 c7 c7 b2 0d 40 00 	mov    $0x400db2,%rdi
  400d04:	e8 b7 fe ff ff       	callq  400bc0 <__libc_start_main@plt>
  400d09:	f4                   	hlt    
  400d0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400d10 <deregister_tm_clones>:
  400d10:	b8 80 47 60 00       	mov    $0x604780,%eax
  400d15:	48 3d 80 47 60 00    	cmp    $0x604780,%rax
  400d1b:	74 13                	je     400d30 <deregister_tm_clones+0x20>
  400d1d:	b8 00 00 00 00       	mov    $0x0,%eax
  400d22:	48 85 c0             	test   %rax,%rax
  400d25:	74 09                	je     400d30 <deregister_tm_clones+0x20>
  400d27:	bf 80 47 60 00       	mov    $0x604780,%edi
  400d2c:	ff e0                	jmpq   *%rax
  400d2e:	66 90                	xchg   %ax,%ax
  400d30:	c3                   	retq   
  400d31:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400d36:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d3d:	00 00 00 

0000000000400d40 <register_tm_clones>:
  400d40:	be 80 47 60 00       	mov    $0x604780,%esi
  400d45:	48 81 ee 80 47 60 00 	sub    $0x604780,%rsi
  400d4c:	48 c1 fe 03          	sar    $0x3,%rsi
  400d50:	48 89 f0             	mov    %rsi,%rax
  400d53:	48 c1 e8 3f          	shr    $0x3f,%rax
  400d57:	48 01 c6             	add    %rax,%rsi
  400d5a:	48 d1 fe             	sar    %rsi
  400d5d:	74 11                	je     400d70 <register_tm_clones+0x30>
  400d5f:	b8 00 00 00 00       	mov    $0x0,%eax
  400d64:	48 85 c0             	test   %rax,%rax
  400d67:	74 07                	je     400d70 <register_tm_clones+0x30>
  400d69:	bf 80 47 60 00       	mov    $0x604780,%edi
  400d6e:	ff e0                	jmpq   *%rax
  400d70:	c3                   	retq   
  400d71:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400d76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d7d:	00 00 00 

0000000000400d80 <__do_global_dtors_aux>:
  400d80:	80 3d 11 3a 20 00 00 	cmpb   $0x0,0x203a11(%rip)        # 604798 <completed.7243>
  400d87:	75 17                	jne    400da0 <__do_global_dtors_aux+0x20>
  400d89:	55                   	push   %rbp
  400d8a:	48 89 e5             	mov    %rsp,%rbp
  400d8d:	e8 7e ff ff ff       	callq  400d10 <deregister_tm_clones>
  400d92:	c6 05 ff 39 20 00 01 	movb   $0x1,0x2039ff(%rip)        # 604798 <completed.7243>
  400d99:	5d                   	pop    %rbp
  400d9a:	c3                   	retq   
  400d9b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400da0:	c3                   	retq   
  400da1:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400da6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400dad:	00 00 00 

0000000000400db0 <frame_dummy>:
  400db0:	eb 8e                	jmp    400d40 <register_tm_clones>

0000000000400db2 <main>:
  400db2:	55                   	push   %rbp
  400db3:	53                   	push   %rbx
  400db4:	48 83 ec 08          	sub    $0x8,%rsp
  400db8:	89 fb                	mov    %edi,%ebx
  400dba:	83 ff 01             	cmp    $0x1,%edi
  400dbd:	0f 84 e5 00 00 00    	je     400ea8 <main+0xf6>
  400dc3:	48 89 f5             	mov    %rsi,%rbp
  400dc6:	83 ff 02             	cmp    $0x2,%edi
  400dc9:	0f 85 08 01 00 00    	jne    400ed7 <main+0x125>
  400dcf:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
  400dd3:	be 24 29 40 00       	mov    $0x402924,%esi
  400dd8:	e8 73 fe ff ff       	callq  400c50 <fopen@plt>
  400ddd:	48 89 05 c4 39 20 00 	mov    %rax,0x2039c4(%rip)        # 6047a8 <infile>
  400de4:	48 85 c0             	test   %rax,%rax
  400de7:	0f 84 ce 00 00 00    	je     400ebb <main+0x109>
  400ded:	e8 c8 05 00 00       	callq  4013ba <initialize_bomb>
  400df2:	89 df                	mov    %ebx,%edi
  400df4:	b8 00 00 00 00       	mov    $0x0,%eax
  400df9:	e8 71 06 00 00       	callq  40146f <welcome_message>
  400dfe:	e8 4a 0e 00 00       	callq  401c4d <read_line>
  400e03:	48 89 c7             	mov    %rax,%rdi
  400e06:	e8 e8 00 00 00       	callq  400ef3 <phase_1>
  400e0b:	e8 18 08 00 00       	callq  401628 <phase_defused>
  400e10:	bf 60 29 40 00       	mov    $0x402960,%edi
  400e15:	e8 46 fd ff ff       	callq  400b60 <puts@plt>
  400e1a:	e8 2e 0e 00 00       	callq  401c4d <read_line>
  400e1f:	48 89 c7             	mov    %rax,%rdi
  400e22:	e8 eb 00 00 00       	callq  400f12 <phase_2>
  400e27:	e8 fc 07 00 00       	callq  401628 <phase_defused>
  400e2c:	bf a0 29 40 00       	mov    $0x4029a0,%edi
  400e31:	e8 2a fd ff ff       	callq  400b60 <puts@plt>
  400e36:	e8 12 0e 00 00       	callq  401c4d <read_line>
  400e3b:	48 89 c7             	mov    %rax,%rdi
  400e3e:	e8 74 01 00 00       	callq  400fb7 <phase_3>
  400e43:	e8 e0 07 00 00       	callq  401628 <phase_defused>
  400e48:	bf c8 29 40 00       	mov    $0x4029c8,%edi
  400e4d:	e8 0e fd ff ff       	callq  400b60 <puts@plt>
  400e52:	e8 f6 0d 00 00       	callq  401c4d <read_line>
  400e57:	48 89 c7             	mov    %rax,%rdi
  400e5a:	e8 f7 01 00 00       	callq  401056 <phase_4>
  400e5f:	e8 c4 07 00 00       	callq  401628 <phase_defused>
  400e64:	bf f0 29 40 00       	mov    $0x4029f0,%edi
  400e69:	e8 f2 fc ff ff       	callq  400b60 <puts@plt>
  400e6e:	e8 da 0d 00 00       	callq  401c4d <read_line>
  400e73:	48 89 c7             	mov    %rax,%rdi
  400e76:	e8 2e 02 00 00       	callq  4010a9 <phase_5>
  400e7b:	e8 a8 07 00 00       	callq  401628 <phase_defused>
  400e80:	bf 28 2a 40 00       	mov    $0x402a28,%edi
  400e85:	e8 d6 fc ff ff       	callq  400b60 <puts@plt>
  400e8a:	e8 be 0d 00 00       	callq  401c4d <read_line>
  400e8f:	48 89 c7             	mov    %rax,%rdi
  400e92:	e8 85 02 00 00       	callq  40111c <phase_6>
  400e97:	e8 8c 07 00 00       	callq  401628 <phase_defused>
  400e9c:	b8 00 00 00 00       	mov    $0x0,%eax
  400ea1:	48 83 c4 08          	add    $0x8,%rsp
  400ea5:	5b                   	pop    %rbx
  400ea6:	5d                   	pop    %rbp
  400ea7:	c3                   	retq   
  400ea8:	48 8b 05 d9 38 20 00 	mov    0x2038d9(%rip),%rax        # 604788 <stdin@@GLIBC_2.2.5>
  400eaf:	48 89 05 f2 38 20 00 	mov    %rax,0x2038f2(%rip)        # 6047a8 <infile>
  400eb6:	e9 32 ff ff ff       	jmpq   400ded <main+0x3b>
  400ebb:	48 8b 55 08          	mov    0x8(%rbp),%rdx
  400ebf:	48 8b 75 00          	mov    0x0(%rbp),%rsi
  400ec3:	bf 26 29 40 00       	mov    $0x402926,%edi
  400ec8:	e8 b3 fc ff ff       	callq  400b80 <printf@plt>
  400ecd:	bf 08 00 00 00       	mov    $0x8,%edi
  400ed2:	e8 a9 fd ff ff       	callq  400c80 <exit@plt>
  400ed7:	48 8b 36             	mov    (%rsi),%rsi
  400eda:	bf 43 29 40 00       	mov    $0x402943,%edi
  400edf:	b8 00 00 00 00       	mov    $0x0,%eax
  400ee4:	e8 97 fc ff ff       	callq  400b80 <printf@plt>
  400ee9:	bf 08 00 00 00       	mov    $0x8,%edi
  400eee:	e8 8d fd ff ff       	callq  400c80 <exit@plt>

0000000000400ef3 <phase_1>:
  400ef3:	53                   	push   %rbx
  400ef4:	48 89 fb             	mov    %rdi,%rbx
  400ef7:	80 7f 01 00          	cmpb   $0x0,0x1(%rdi)
  400efb:	75 07                	jne    400f04 <phase_1+0x11>
  400efd:	80 3b 79             	cmpb   $0x79,(%rbx)
  400f00:	75 09                	jne    400f0b <phase_1+0x18>
  400f02:	5b                   	pop    %rbx
  400f03:	c3                   	retq   
  400f04:	e8 5a 07 00 00       	callq  401663 <explode_bomb>
  400f09:	eb f2                	jmp    400efd <phase_1+0xa>
  400f0b:	e8 53 07 00 00       	callq  401663 <explode_bomb>
  400f10:	eb f0                	jmp    400f02 <phase_1+0xf>	//y

0000000000400f12 <phase_2>:
  400f12:	41 54                	push   %r12
  400f14:	55                   	push   %rbp
  400f15:	53                   	push   %rbx
  400f16:	48 83 ec 20          	sub    $0x20,%rsp		//makes a stack
  400f1a:	48 89 e6             	mov    %rsp,%rsi
  400f1d:	e8 ec 0c 00 00       	callq  401c0e <read_six_numbers>//must be 6 numbers long
  400f22:	83 3c 24 04          	cmpl   $0x4,(%rsp) 		//first number should be more than 4
  400f26:	7e 0a                	jle    400f32 <phase_2+0x20>	//if first number less than 4, explode
  400f28:	48 89 e3             	mov    %rsp,%rbx		//move content of rsp to rbx
  400f2b:	bd 01 00 00 00       	mov    $0x1,%ebp
  400f30:	eb 23                	jmp    400f55 <phase_2+0x43> 	//jumps to mov
  400f32:	e8 2c 07 00 00       	callq  401663 <explode_bomb>
  400f37:	eb ef                	jmp    400f28 <phase_2+0x16>
  400f39:	e8 25 07 00 00       	callq  401663 <explode_bomb>
  400f3e:	41 8b 44 24 04       	mov    0x4(%r12),%eax		//start of loop
  400f43:	89 05 53 38 20 00    	mov    %eax,0x203853(%rip)        # 60479c <trap>
  400f49:	83 c5 01             	add    $0x1,%ebp
  400f4c:	48 83 c3 04          	add    $0x4,%rbx
  400f50:	83 fd 06             	cmp    $0x6,%ebp
  400f53:	74 0e                	je     400f63 <phase_2+0x51>	//end loop if ebp is 6
  400f55:	49 89 dc             	mov    %rbx,%r12		//jumps here
  400f58:	8b 03                	mov    (%rbx),%eax
  400f5a:	29 e8                	sub    %ebp,%eax
  400f5c:	39 43 04             	cmp    %eax,0x4(%rbx)		//comparing something
  400f5f:	74 dd                	je     400f3e <phase_2+0x2c>	//end of loop 
  400f61:	eb d6                	jmp    400f39 <phase_2+0x27>
  400f63:	48 83 c4 20          	add    $0x20,%rsp		//closing the stack frame 
  400f67:	5b                   	pop    %rbx
  400f68:	5d                   	pop    %rbp
  400f69:	41 5c                	pop    %r12
  400f6b:	c3                   	retq   				//subtracts 1, 2, 3, 4, 5 from each number

0000000000400f6c <func_switch>:
  400f6c:	83 ff 07             	cmp    $0x7,%edi		//comparing it to 7
  400f6f:	77 2d                	ja     400f9e <func_switch+0x32>//if greater than 7, jump to explode
  400f71:	89 ff                	mov    %edi,%edi
  400f73:	ff 24 fd 60 2a 40 00 	jmpq   *0x402a60(,%rdi,8)	//rdi holds first number
  400f7a:	b8 d7 01 00 00       	mov    $0x1d7,%eax		
  400f7f:	c3                   	retq   
  400f80:	b8 69 02 00 00       	mov    $0x269,%eax		//2 ends here
  400f85:	c3                   	retq   
  400f86:	b8 a9 01 00 00       	mov    $0x1a9,%eax		//3 ends here
  400f8b:	c3                   	retq   
  400f8c:	b8 8b 02 00 00       	mov    $0x28b,%eax
  400f91:	c3                   	retq   
  400f92:	b8 43 00 00 00       	mov    $0x43,%eax
  400f97:	c3                   	retq   
  400f98:	b8 38 00 00 00       	mov    $0x38,%eax
  400f9d:	c3                   	retq   
  400f9e:	48 83 ec 08          	sub    $0x8,%rsp		//pop space off stack
  400fa2:	e8 bc 06 00 00       	callq  401663 <explode_bomb>	//explode bomb
  400fa7:	b8 00 00 00 00       	mov    $0x0,%eax
  400fac:	48 83 c4 08          	add    $0x8,%rsp
  400fb0:	c3                   	retq   
  400fb1:	b8 f9 00 00 00       	mov    $0xf9,%eax
  400fb6:	c3                   	retq   

0000000000400fb7 <phase_3>:
  400fb7:	53                   	push   %rbx
  400fb8:	48 83 ec 10          	sub    $0x10,%rsp
  400fbc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  400fc3:	00 
  400fc4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
  400fcb:	00 
  400fcc:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx			//eax holds the number of integers: 2
  400fd1:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  400fd6:	be b1 31 40 00       	mov    $0x4031b1,%esi			//must be 2 integers %d
  400fdb:	b8 00 00 00 00       	mov    $0x0,%eax
  400fe0:	e8 4b fc ff ff       	callq  400c30 <__isoc99_sscanf@plt>
  400fe5:	83 f8 01             	cmp    $0x1,%eax			//first number must be greater than 1
  400fe8:	7e 0a                	jle    400ff4 <phase_3+0x3d>		//calls bomb if less than 0
  400fea:	8b 44 24 08          	mov    0x8(%rsp),%eax			//subtracts 1 from tax?
  400fee:	39 44 24 0c          	cmp    %eax,0xc(%rsp)			//must be 2 different numbers
  400ff2:	75 05                	jne    400ff9 <phase_3+0x42>
  400ff4:	e8 6a 06 00 00       	callq  401663 <explode_bomb>
  400ff9:	8b 7c 24 0c          	mov    0xc(%rsp),%edi
  400ffd:	e8 6a ff ff ff       	callq  400f6c <func_switch>
  401002:	89 c3                	mov    %eax,%ebx
  401004:	8b 7c 24 08          	mov    0x8(%rsp),%edi			//push second number into edi
  401008:	e8 5f ff ff ff       	callq  400f6c <func_switch>
  40100d:	39 c3                	cmp    %eax,%ebx
  40100f:	75 06                	jne    401017 <phase_3+0x60>		//calls bomb
  401011:	48 83 c4 10          	add    $0x10,%rsp
  401015:	5b                   	pop    %rbx
  401016:	c3                   	retq   
  401017:	e8 47 06 00 00       	callq  401663 <explode_bomb>
  40101c:	eb f3                	jmp    401011 <phase_3+0x5a>

000000000040101e <func4>:
  40101e:	b8 00 00 00 00       	mov    $0x0,%max
  401023:	85 ff                	test   %edi,%edi			//tests if edi is 0, ZF = 1, AND(eax, eax) = 0, cannot be 0
  401025:	7e 2e                	jle    401055 <func4+0x37>		//jumps to return if ZF is less than 1
  401027:	89 f0                	mov    %esi,%eax
  401029:	83 ff 01             	cmp    $0x1,%edi 			//compares edi to 1
  40102c:	74 27                	je     401055 <func4+0x37>		//jump to 2nd return if edi = 1
  40102e:	41 54                	push   %r12
  401030:	55                   	push   %rbp
  401031:	53                   	push   %rbx
  401032:	41 89 f4             	mov    %esi,%r12d
  401035:	89 fb                	mov    %edi,%ebx
  401037:	8d 7f ff             	lea    -0x1(%rdi),%edi
  40103a:	e8 df ff ff ff       	callq  40101e <func4>			//recursive recall function
  40103f:	42 8d 2c 20          	lea    (%rax,%r12,1),%ebp
  401043:	8d 7b fe             	lea    -0x2(%rbx),%edi
  401046:	44 89 e6             	mov    %r12d,%esi
  401049:	e8 d0 ff ff ff       	callq  40101e <func4>
  40104e:	01 e8                	add    %ebp,%eax
  401050:	5b                   	pop    %rbx
  401051:	5d                   	pop    %rbp
  401052:	41 5c                	pop    %r12
  401054:	c3                   	retq   
  401055:	c3                   	retq   					//returns to 103f/104e

0000000000401056 <phase_4>:
  401056:	48 83 ec 18          	sub    $0x18,%rsp			//makes stack frame
  40105a:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx			//first input = rcx
  40105f:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx			//second input = rdx?
  401064:	be b1 31 40 00       	mov    $0x4031b1,%esi			//expects 2 numbers
  401069:	b8 00 00 00 00       	mov    $0x0,%eax
  40106e:	e8 bd fb ff ff       	callq  400c30 <__isoc99_sscanf@plt>
  401073:	83 f8 02             	cmp    $0x2,%eax			
  401076:	75 0c                	jne    401084 <phase_4+0x2e>		//if not equal to 2, explode
  401078:	8b 44 24 0c          	mov    0xc(%rsp),%tax
  40107c:	83 e8 02             	sub    $0x2,%eax			//subtract 2 from eax
  40107f:	83 f8 02             	cmp    $0x2,%eax						
  401082:	76 05                	jbe    401089 <phase_4+0x33>		//if eax < 2, skip bomb
  401084:	e8 da 05 00 00       	callq  401663 <explode_bomb>
  401089:	8b 74 24 0c          	mov    0xc(%rsp),%esi
  40108d:	bf 08 00 00 00       	mov    $0x8,%edi
  401092:	e8 87 ff ff ff       	callq  40101e <func4>
  401097:	39 44 24 08          	cmp    %eax,0x8(%rsp)			//trick line
  40109b:	75 05                	jne    4010a2 <phase_4+0x4c>		//explode bomb if not equal
  40109d:	48 83 c4 18          	add    $0x18,%rsp
  4010a1:	c3                   	retq   
  4010a2:	e8 bc 05 00 00       	callq  401663 <explode_bomb>
  4010a7:	eb f4                	jmp    40109d <phase_4+0x47>		// p /x *(int *)($rsp+0x8)

00000000004010a9 <phase_5>:
  4010a9:	48 83 ec 18          	sub    $0x18,%rsp
  4010ad:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  4010b2:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  4010b7:	be b1 31 40 00       	mov    $0x4031b1,%esi
  4010bc:	b8 00 00 00 00       	mov    $0x0,%eax
  4010c1:	e8 6a fb ff ff       	callq  400c30 <__isoc99_sscanf@plt>
  4010c6:	83 f8 01             	cmp    $0x1,%eax			//explode bomb if eax is less than 1
  4010c9:	7e 4a                	jle    401115 <phase_5+0x6c> 
  4010cb:	8b 44 24 0c          	mov    0xc(%rsp),%eax
  4010cf:	83 e0 0f             	and    $0xf,%eax			//bc of the and compare
  4010d2:	89 44 24 0c          	mov    %eax,0xc(%rsp)
  4010d6:	83 f8 0f             	cmp    $0xf,%eax			//last 4 bits cannot be 1111
  4010d9:	74 30                	je     40110b <phase_5+0x62>		//explode bomb if eax is equal to 15
  4010db:	b9 00 00 00 00       	mov    $0x0,%ecx
  4010e0:	ba 00 00 00 00       	mov    $0x0,%edx
  4010e5:	83 c2 01             	add    $0x1,%edx
  4010e8:	48 98                	cltq   
  4010ea:	8b 04 85 a0 2a 40 00 	mov    0x402aa0(,%rax,4),%eax
  4010f1:	01 c1                	add    %eax,%ecx
  4010f3:	83 f8 0f             	cmp    $0xf,%eax			//eax must equal 15 to continue
  4010f6:	75 ed                	jne    4010e5 <phase_5+0x3c>
  4010f8:	c7 44 24 0c 0f 00 00 	movl   $0xf,0xc(%rsp)
  4010ff:	00 
  401100:	83 fa 0f             	cmp    $0xf,%edx			//explode bomb if eax is not equal to 15
  401103:	75 06                	jne    40110b <phase_5+0x62>
  401105:	39 4c 24 08          	cmp    %ecx,0x8(%rsp)			//ecx = parameter
  401109:	74 05                	je     401110 <phase_5+0x67>
  40110b:	e8 53 05 00 00       	callq  401663 <explode_bomb>
  401110:	48 83 c4 18          	add    $0x18,%rsp
  401114:	c3                   	retq   
  401115:	e8 49 05 00 00       	callq  401663 <explode_bomb>
  40111a:	eb af                	jmp    4010cb <phase_5+0x22>

000000000040111c <phase_6>:
  40111c:	41 56                	push   %r14
  40111e:	41 55                	push   %r13
  401120:	41 54                	push   %r12
  401122:	55                   	push   %rbp
  401123:	53                   	push   %rbx
  401124:	48 83 ec 50          	sub    $0x50,%rsp				//makes stack frame
  401128:	48 8d 74 24 30       	lea    0x30(%rsp),%rsi
  40112d:	e8 dc 0a 00 00       	callq  401c0e <read_six_numbers>		//6 number answer
  401132:	4c 8d 64 24 30       	lea    0x30(%rsp),%r12
  401137:	4d 8d 74 24 14       	lea    0x14(%r12),%r14
  40113c:	41 bd 01 00 00 00    	mov    $0x1,%r13d				//move 1 into %r13d register
  401142:	eb 28                	jmp    40116c <phase_6+0x50>			//jump call 1
  401144:	e8 1a 05 00 00       	callq  401663 <explode_bomb>
  401149:	eb 30                	jmp    40117b <phase_6+0x5f>
  40114b:	e8 13 05 00 00       	callq  401663 <explode_bomb>
  401150:	48 83 c3 01          	add    $0x1,%rbx				//jump call 4
  401154:	83 fb 05             	cmp    $0x5,%ebx				//ebx needs to be greater than 5 to continue
  401157:	7f 0b                	jg     401164 <phase_6+0x48>			//jump 5 if ebx is greater than 5
  401159:	8b 44 9c 30          	mov    0x30(%rsp,%rbx,4),%eax			//jump call 3 here, adding 2 to eax
  40115d:	39 45 00             	cmp    %eax,0x0(%rbp)				//eax = 2nd input number?
  401160:	75 ee                	jne    401150 <phase_6+0x34>			//jump call 4 if not equal
  401162:	eb e7                	jmp    40114b <phase_6+0x2f>
  401164:	49 83 c5 01          	add    $0x1,%r13				//jump call 5
  401168:	49 83 c4 04          	add    $0x4,%r12
  40116c:	4c 89 e5             	mov    %r12,%rbp				//jump call 1 here, r12 holds 5?
  40116f:	41 8b 04 24          	mov    (%r12),%eax				//eax holds first number inputted
  401173:	83 e8 01             	sub    $0x1,%eax				//eax - 1
  401176:	83 f8 05             	cmp    $0x5,%eax				//eax has to be less than 5
  401179:	77 c9                	ja     401144 <phase_6+0x28>			//explode bomb if eax > 5
  40117b:	4d 39 f4             	cmp    %r14,%r12					//r14 = r12 to pass
  40117e:	74 05                	je     401185 <phase_6+0x69>			//jump call 2 if r14 = r12
  401180:	4c 89 eb             	mov    %r13,%rbx
  401183:	eb d4                	jmp    401159 <phase_6+0x3d>			//jump call 3
  401185:	be 00 00 00 00       	mov    $0x0,%esi				//jump call 2 here
  40118a:	8b 4c b4 30          	mov    0x30(%rsp,%rsi,4),%ecx			//jump 7 here
  40118e:	b8 01 00 00 00       	mov    $0x1,%eax
  401193:	ba f0 42 60 00       	mov    $0x6042f0,%edx
  401198:	83 f9 01             	cmp    $0x1,%ecx				
  40119b:	7e 0b                	jle    4011a8 <phase_6+0x8c>			//jump 6 if ecx is less than 1
  40119d:	48 8b 52 08          	mov    0x8(%rdx),%rdx
  4011a1:	83 c0 01             	add    $0x1,%eax
  4011a4:	39 c8                	cmp    %ecx,%eax
  4011a6:	75 f5                	jne    40119d <phase_6+0x81>
  4011a8:	48 89 14 f4          	mov    %rdx,(%rsp,%rsi,8)			//jump 6 here
  4011ac:	48 83 c6 01          	add    $0x1,%rsi				//Adds 1 to rsi
  4011b0:	48 83 fe 06          	cmp    $0x6,%rsi				//must equal 6
  4011b4:	75 d4                	jne    40118a <phase_6+0x6e>			//jump 7 if rsi is not equal to 6 
  4011b6:	48 8b 1c 24          	mov    (%rsp),%rbx				//x/ 24xb
  4011ba:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4011bf:	48 89 43 08          	mov    %rax,0x8(%rbx)
  4011c3:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  4011c8:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4011cc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
  4011d1:	48 89 42 08          	mov    %rax,0x8(%rdx)
  4011d5:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
  4011da:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4011de:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4011e3:	48 89 42 08          	mov    %rax,0x8(%rdx)
  4011e7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  4011ee:	00 
  4011ef:	bd 05 00 00 00       	mov    $0x5,%ebp
  4011f4:	eb 09                	jmp    4011ff <phase_6+0xe3>
  4011f6:	48 8b 5b 08          	mov    0x8(%rbx),%rbx				//jump 8 here
  4011fa:	83 ed 01             	sub    $0x1,%ebp
  4011fd:	74 11                	je     401210 <phase_6+0xf4>			//jump 9 if equal
  4011ff:	48 8b 43 08          	mov    0x8(%rbx),%rax				//jump 8 here
  401203:	8b 00                	mov    (%rax),%eax
  401205:	39 03                	cmp    %eax,(%rbx)
  401207:	7d ed                	jge    4011f6 <phase_6+0xda>			//jump 8 if rbx > eax
  401209:	e8 55 04 00 00       	callq  401663 <explode_bomb>
  40120e:	eb e6                	jmp    4011f6 <phase_6+0xda>
  401210:	83 3d 85 35 20 00 21 	cmpl   $0x21,0x203585(%rip)        # 60479c <trap> //jump 9 here
  401217:	74 0d                	je     401226 <phase_6+0x10a>			//Go here for secret phase
  401219:	48 83 c4 50          	add    $0x50,%rsp
  40121d:	5b                   	pop    %rbx
  40121e:	5d                   	pop    %rbp
  40121f:	41 5c                	pop    %r12
  401221:	41 5d                	pop    %r13
  401223:	41 5e                	pop    %r14
  401225:	c3                   	retq   
  401226:	e8 38 04 00 00       	callq  401663 <explode_bomb>			//jump here for secret phase
  40122b:	eb ec                	jmp    401219 <phase_6+0xfd>

000000000040122d <fun7>:
  40122d:	48 85 ff             	test   %rdi,%rdi
  401230:	74 32                	je     401264 <fun7+0x37>
  401232:	48 83 ec 08          	sub    $0x8,%rsp
  401236:	8b 17                	mov    (%rdi),%edx
  401238:	39 f2                	cmp    %esi,%edx
  40123a:	7f 0c                	jg     401248 <fun7+0x1b>
  40123c:	b8 00 00 00 00       	mov    $0x0,%eax
  401241:	75 12                	jne    401255 <fun7+0x28>
  401243:	48 83 c4 08          	add    $0x8,%rsp
  401247:	c3                   	retq   
  401248:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
  40124c:	e8 dc ff ff ff       	callq  40122d <fun7>
  401251:	01 c0                	add    %eax,%eax
  401253:	eb ee                	jmp    401243 <fun7+0x16>
  401255:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
  401259:	e8 cf ff ff ff       	callq  40122d <fun7>
  40125e:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
  401262:	eb df                	jmp    401243 <fun7+0x16>
  401264:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  401269:	c3                   	retq   

000000000040126a <s3cret_phase>:
  40126a:	53                   	push   %rbx
  40126b:	e8 dd 09 00 00       	callq  401c4d <read_line>
  401270:	ba 0a 00 00 00       	mov    $0xa,%edx
  401275:	be 00 00 00 00       	mov    $0x0,%esi
  40127a:	48 89 c7             	mov    %rax,%rdi
  40127d:	e8 8e f9 ff ff       	callq  400c10 <strtol@plt>
  401282:	48 89 c3             	mov    %rax,%rbx
  401285:	8d 40 ff             	lea    -0x1(%rax),%eax				//subtracts 1 from what you put in 
  401288:	3d e8 03 00 00       	cmp    $0x3e8,%eax
  40128d:	77 2b                	ja     4012ba <s3cret_phase+0x50>			//call explode bomb if above 
  40128f:	89 de                	mov    %ebx,%esi
  401291:	bf 10 41 60 00       	mov    $0x604110,%edi
  401296:	e8 92 ff ff ff       	callq  40122d <fun7>
  40129b:	85 c0                	test   %eax,%eax
  40129d:	75 22                	jne    4012c1 <s3cret_phase+0x57>			//Explode if not equal
  40129f:	bf e0 2a 40 00       	mov    $0x402ae0,%edi
  4012a4:	e8 b7 f8 ff ff       	callq  400b60 <puts@plt>
  4012a9:	bf 08 2b 40 00       	mov    $0x402b08,%edi				//DEFUSED
  4012ae:	e8 ad f8 ff ff       	callq  400b60 <puts@plt>
  4012b3:	e8 70 03 00 00       	callq  401628 <phase_defused>
  4012b8:	5b                   	pop    %rbx
  4012b9:	c3                   	retq   
  4012ba:	e8 a4 03 00 00       	callq  401663 <explode_bomb>
  4012bf:	eb ce                	jmp    40128f <s3cret_phase+0x25>
  4012c1:	e8 9d 03 00 00       	callq  401663 <explode_bomb>
  4012c6:	eb d7                	jmp    40129f <s3cret_phase+0x35>

00000000004012c8 <sig_handler>:
  4012c8:	48 83 ec 08          	sub    $0x8,%rsp
  4012cc:	bf 30 2b 40 00       	mov    $0x402b30,%edi
  4012d1:	e8 8a f8 ff ff       	callq  400b60 <puts@plt>
  4012d6:	bf 03 00 00 00       	mov    $0x3,%edi
  4012db:	e8 c0 f9 ff ff       	callq  400ca0 <sleep@plt>
  4012e0:	bf d3 30 40 00       	mov    $0x4030d3,%edi
  4012e5:	b8 00 00 00 00       	mov    $0x0,%eax
  4012ea:	e8 91 f8 ff ff       	callq  400b80 <printf@plt>
  4012ef:	48 8b 3d 8a 34 20 00 	mov    0x20348a(%rip),%rdi        # 604780 <stdout@@GLIBC_2.2.5>
  4012f6:	e8 25 f9 ff ff       	callq  400c20 <fflush@plt>
  4012fb:	bf 01 00 00 00       	mov    $0x1,%edi
  401300:	e8 9b f9 ff ff       	callq  400ca0 <sleep@plt>
  401305:	bf db 30 40 00       	mov    $0x4030db,%edi
  40130a:	e8 51 f8 ff ff       	callq  400b60 <puts@plt>
  40130f:	bf 10 00 00 00       	mov    $0x10,%edi
  401314:	e8 67 f9 ff ff       	callq  400c80 <exit@plt>

0000000000401319 <invalid_phase>:
  401319:	48 83 ec 08          	sub    $0x8,%rsp
  40131d:	48 89 fe             	mov    %rdi,%rsi
  401320:	bf e3 30 40 00       	mov    $0x4030e3,%edi
  401325:	b8 00 00 00 00       	mov    $0x0,%eax
  40132a:	e8 51 f8 ff ff       	callq  400b80 <printf@plt>
  40132f:	bf 08 00 00 00       	mov    $0x8,%edi
  401334:	e8 47 f9 ff ff       	callq  400c80 <exit@plt>

0000000000401339 <string_length>:
  401339:	b8 00 00 00 00       	mov    $0x0,%eax
  40133e:	80 3f 00             	cmpb   $0x0,(%rdi)
  401341:	74 0e                	je     401351 <string_length+0x18>
  401343:	48 83 c7 01          	add    $0x1,%rdi
  401347:	83 c0 01             	add    $0x1,%eax
  40134a:	3d 10 27 00 00       	cmp    $0x2710,%eax
  40134f:	75 ed                	jne    40133e <string_length+0x5>
  401351:	c3                   	retq   

0000000000401352 <strings_not_equal>:
  401352:	41 54                	push   %r12
  401354:	55                   	push   %rbp
  401355:	53                   	push   %rbx
  401356:	48 89 fb             	mov    %rdi,%rbx
  401359:	48 89 f5             	mov    %rsi,%rbp
  40135c:	e8 d8 ff ff ff       	callq  401339 <string_length>
  401361:	41 89 c4             	mov    %eax,%r12d
  401364:	48 89 ef             	mov    %rbp,%rdi
  401367:	e8 cd ff ff ff       	callq  401339 <string_length>
  40136c:	ba 01 00 00 00       	mov    $0x1,%edx
  401371:	41 39 c4             	cmp    %eax,%r12d
  401374:	75 2f                	jne    4013a5 <strings_not_equal+0x53>
  401376:	0f b6 03             	movzbl (%rbx),%eax
  401379:	84 c0                	test   %al,%al
  40137b:	74 2f                	je     4013ac <strings_not_equal+0x5a>
  40137d:	3a 45 00             	cmp    0x0(%rbp),%al
  401380:	75 31                	jne    4013b3 <strings_not_equal+0x61>
  401382:	b8 01 00 00 00       	mov    $0x1,%eax
  401387:	0f b6 14 03          	movzbl (%rbx,%rax,1),%edx
  40138b:	84 d2                	test   %dl,%dl
  40138d:	74 11                	je     4013a0 <strings_not_equal+0x4e>
  40138f:	48 83 c0 01          	add    $0x1,%rax
  401393:	38 54 05 ff          	cmp    %dl,-0x1(%rbp,%rax,1)
  401397:	74 ee                	je     401387 <strings_not_equal+0x35>
  401399:	ba 01 00 00 00       	mov    $0x1,%edx
  40139e:	eb 05                	jmp    4013a5 <strings_not_equal+0x53>
  4013a0:	ba 00 00 00 00       	mov    $0x0,%edx
  4013a5:	89 d0                	mov    %edx,%eax
  4013a7:	5b                   	pop    %rbx
  4013a8:	5d                   	pop    %rbp
  4013a9:	41 5c                	pop    %r12
  4013ab:	c3                   	retq   
  4013ac:	ba 00 00 00 00       	mov    $0x0,%edx
  4013b1:	eb f2                	jmp    4013a5 <strings_not_equal+0x53>
  4013b3:	ba 01 00 00 00       	mov    $0x1,%edx
  4013b8:	eb eb                	jmp    4013a5 <strings_not_equal+0x53>

00000000004013ba <initialize_bomb>:
  4013ba:	53                   	push   %rbx
  4013bb:	48 81 ec 40 20 00 00 	sub    $0x2040,%rsp
  4013c2:	be c8 12 40 00       	mov    $0x4012c8,%esi
  4013c7:	bf 02 00 00 00       	mov    $0x2,%edi
  4013cc:	e8 0f f8 ff ff       	callq  400be0 <signal@plt>
  4013d1:	be 40 00 00 00       	mov    $0x40,%esi
  4013d6:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  4013dd:	00 
  4013de:	e8 7d f8 ff ff       	callq  400c60 <gethostname@plt>
  4013e3:	85 c0                	test   %eax,%eax
  4013e5:	75 43                	jne    40142a <initialize_bomb+0x70>
  4013e7:	48 8b 3d 92 2f 20 00 	mov    0x202f92(%rip),%rdi        # 604380 <host_table>
  4013ee:	bb 88 43 60 00       	mov    $0x604388,%ebx
  4013f3:	48 85 ff             	test   %rdi,%rdi
  4013f6:	74 1e                	je     401416 <initialize_bomb+0x5c>
  4013f8:	48 8d b4 24 00 20 00 	lea    0x2000(%rsp),%rsi
  4013ff:	00 
  401400:	e8 2b f7 ff ff       	callq  400b30 <strcasecmp@plt>
  401405:	85 c0                	test   %eax,%eax
  401407:	74 51                	je     40145a <initialize_bomb+0xa0>
  401409:	48 83 c3 08          	add    $0x8,%rbx
  40140d:	48 8b 7b f8          	mov    -0x8(%rbx),%rdi
  401411:	48 85 ff             	test   %rdi,%rdi
  401414:	75 e2                	jne    4013f8 <initialize_bomb+0x3e>
  401416:	bf a0 2b 40 00       	mov    $0x402ba0,%edi
  40141b:	e8 40 f7 ff ff       	callq  400b60 <puts@plt>
  401420:	bf 08 00 00 00       	mov    $0x8,%edi
  401425:	e8 56 f8 ff ff       	callq  400c80 <exit@plt>
  40142a:	bf 68 2b 40 00       	mov    $0x402b68,%edi
  40142f:	e8 2c f7 ff ff       	callq  400b60 <puts@plt>
  401434:	bf 08 00 00 00       	mov    $0x8,%edi
  401439:	e8 42 f8 ff ff       	callq  400c80 <exit@plt>
  40143e:	48 89 e6             	mov    %rsp,%rsi
  401441:	bf f4 30 40 00       	mov    $0x4030f4,%edi
  401446:	b8 00 00 00 00       	mov    $0x0,%eax
  40144b:	e8 30 f7 ff ff       	callq  400b80 <printf@plt>
  401450:	bf 08 00 00 00       	mov    $0x8,%edi
  401455:	e8 26 f8 ff ff       	callq  400c80 <exit@plt>
  40145a:	48 89 e7             	mov    %rsp,%rdi
  40145d:	e8 0a 12 00 00       	callq  40266c <init_driver>
  401462:	85 c0                	test   %eax,%eax
  401464:	78 d8                	js     40143e <initialize_bomb+0x84>
  401466:	48 81 c4 40 20 00 00 	add    $0x2040,%rsp
  40146d:	5b                   	pop    %rbx
  40146e:	c3                   	retq   

000000000040146f <welcome_message>:
  40146f:	83 ff 01             	cmp    $0x1,%edi
  401472:	74 01                	je     401475 <welcome_message+0x6>
  401474:	c3                   	retq   
  401475:	48 83 ec 08          	sub    $0x8,%rsp
  401479:	bf d8 2b 40 00       	mov    $0x402bd8,%edi
  40147e:	e8 dd f6 ff ff       	callq  400b60 <puts@plt>
  401483:	bf 20 2c 40 00       	mov    $0x402c20,%edi
  401488:	e8 d3 f6 ff ff       	callq  400b60 <puts@plt>
  40148d:	bf 68 2c 40 00       	mov    $0x402c68,%edi
  401492:	e8 c9 f6 ff ff       	callq  400b60 <puts@plt>
  401497:	bf b0 2c 40 00       	mov    $0x402cb0,%edi
  40149c:	e8 bf f6 ff ff       	callq  400b60 <puts@plt>
  4014a1:	bf b0 2c 40 00       	mov    $0x402cb0,%edi
  4014a6:	e8 b5 f6 ff ff       	callq  400b60 <puts@plt>
  4014ab:	bf f8 2c 40 00       	mov    $0x402cf8,%edi
  4014b0:	e8 ab f6 ff ff       	callq  400b60 <puts@plt>
  4014b5:	bf 40 2d 40 00       	mov    $0x402d40,%edi
  4014ba:	e8 a1 f6 ff ff       	callq  400b60 <puts@plt>
  4014bf:	bf 88 2d 40 00       	mov    $0x402d88,%edi
  4014c4:	e8 97 f6 ff ff       	callq  400b60 <puts@plt>
  4014c9:	bf d0 2d 40 00       	mov    $0x402dd0,%edi
  4014ce:	e8 8d f6 ff ff       	callq  400b60 <puts@plt>
  4014d3:	bf 18 2e 40 00       	mov    $0x402e18,%edi
  4014d8:	e8 83 f6 ff ff       	callq  400b60 <puts@plt>
  4014dd:	bf 60 2e 40 00       	mov    $0x402e60,%edi
  4014e2:	e8 79 f6 ff ff       	callq  400b60 <puts@plt>
  4014e7:	bf a8 2e 40 00       	mov    $0x402ea8,%edi
  4014ec:	e8 6f f6 ff ff       	callq  400b60 <puts@plt>
  4014f1:	bf f0 2e 40 00       	mov    $0x402ef0,%edi
  4014f6:	e8 65 f6 ff ff       	callq  400b60 <puts@plt>
  4014fb:	bf 38 2f 40 00       	mov    $0x402f38,%edi
  401500:	e8 5b f6 ff ff       	callq  400b60 <puts@plt>
  401505:	bf 80 2f 40 00       	mov    $0x402f80,%edi
  40150a:	e8 51 f6 ff ff       	callq  400b60 <puts@plt>
  40150f:	bf c8 2f 40 00       	mov    $0x402fc8,%edi
  401514:	e8 47 f6 ff ff       	callq  400b60 <puts@plt>
  401519:	48 83 c4 08          	add    $0x8,%rsp
  40151d:	c3                   	retq   

000000000040151e <initialize_bomb_solve>:
  40151e:	c3                   	retq   

000000000040151f <blank_line>:
  40151f:	55                   	push   %rbp
  401520:	53                   	push   %rbx
  401521:	48 83 ec 08          	sub    $0x8,%rsp
  401525:	48 89 fd             	mov    %rdi,%rbp
  401528:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
  40152c:	84 db                	test   %bl,%bl
  40152e:	74 1e                	je     40154e <blank_line+0x2f>
  401530:	e8 7b f7 ff ff       	callq  400cb0 <__ctype_b_loc@plt>
  401535:	48 83 c5 01          	add    $0x1,%rbp
  401539:	48 0f be db          	movsbq %bl,%rbx
  40153d:	48 8b 00             	mov    (%rax),%rax
  401540:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
  401545:	75 e1                	jne    401528 <blank_line+0x9>
  401547:	b8 00 00 00 00       	mov    $0x0,%eax
  40154c:	eb 05                	jmp    401553 <blank_line+0x34>
  40154e:	b8 01 00 00 00       	mov    $0x1,%eax
  401553:	48 83 c4 08          	add    $0x8,%rsp
  401557:	5b                   	pop    %rbx
  401558:	5d                   	pop    %rbp
  401559:	c3                   	retq   

000000000040155a <skip>:
  40155a:	53                   	push   %rbx
  40155b:	48 63 05 3e 32 20 00 	movslq 0x20323e(%rip),%rax        # 6047a0 <num_input_strings>
  401562:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
  401566:	48 c1 e7 04          	shl    $0x4,%rdi
  40156a:	48 81 c7 c0 47 60 00 	add    $0x6047c0,%rdi
  401571:	48 8b 15 30 32 20 00 	mov    0x203230(%rip),%rdx        # 6047a8 <infile>
  401578:	be 50 00 00 00       	mov    $0x50,%esi
  40157d:	e8 4e f6 ff ff       	callq  400bd0 <fgets@plt>
  401582:	48 89 c3             	mov    %rax,%rbx
  401585:	48 85 c0             	test   %rax,%rax
  401588:	74 0c                	je     401596 <skip+0x3c>
  40158a:	48 89 c7             	mov    %rax,%rdi
  40158d:	e8 8d ff ff ff       	callq  40151f <blank_line>
  401592:	85 c0                	test   %eax,%eax
  401594:	75 c5                	jne    40155b <skip+0x1>
  401596:	48 89 d8             	mov    %rbx,%rax
  401599:	5b                   	pop    %rbx
  40159a:	c3                   	retq   

000000000040159b <send_msg>:
  40159b:	48 81 ec 08 40 00 00 	sub    $0x4008,%rsp
  4015a2:	44 8b 05 f7 31 20 00 	mov    0x2031f7(%rip),%r8d        # 6047a0 <num_input_strings>
  4015a9:	41 8d 40 ff          	lea    -0x1(%r8),%eax
  4015ad:	48 98                	cltq   
  4015af:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  4015b3:	48 c1 e0 04          	shl    $0x4,%rax
  4015b7:	85 ff                	test   %edi,%edi
  4015b9:	b9 0e 31 40 00       	mov    $0x40310e,%ecx
  4015be:	ba 16 31 40 00       	mov    $0x403116,%edx
  4015c3:	48 0f 44 ca          	cmove  %rdx,%rcx
  4015c7:	4c 8d 88 c0 47 60 00 	lea    0x6047c0(%rax),%r9
  4015ce:	8b 15 a0 2d 20 00    	mov    0x202da0(%rip),%edx        # 604374 <bomb_id>
  4015d4:	be 1f 31 40 00       	mov    $0x40311f,%esi
  4015d9:	48 8d bc 24 00 20 00 	lea    0x2000(%rsp),%rdi
  4015e0:	00 
  4015e1:	b8 00 00 00 00       	mov    $0x0,%eax
  4015e6:	e8 85 f6 ff ff       	callq  400c70 <sprintf@plt>
  4015eb:	49 89 e0             	mov    %rsp,%r8
  4015ee:	b9 00 00 00 00       	mov    $0x0,%ecx
  4015f3:	48 8d 94 24 00 20 00 	lea    0x2000(%rsp),%rdx
  4015fa:	00 
  4015fb:	be 50 43 60 00       	mov    $0x604350,%esi
  401600:	bf 68 43 60 00       	mov    $0x604368,%edi
  401605:	e8 13 12 00 00       	callq  40281d <driver_post>
  40160a:	85 c0                	test   %eax,%eax
  40160c:	78 08                	js     401616 <send_msg+0x7b>
  40160e:	48 81 c4 08 40 00 00 	add    $0x4008,%rsp
  401615:	c3                   	retq   
  401616:	48 89 e7             	mov    %rsp,%rdi
  401619:	e8 42 f5 ff ff       	callq  400b60 <puts@plt>
  40161e:	bf 00 00 00 00       	mov    $0x0,%edi
  401623:	e8 58 f6 ff ff       	callq  400c80 <exit@plt>

0000000000401628 <phase_defused>:
  401628:	48 83 ec 08          	sub    $0x8,%rsp
  40162c:	bf 01 00 00 00       	mov    $0x1,%edi
  401631:	e8 65 ff ff ff       	callq  40159b <send_msg>
  401636:	83 3d 63 31 20 00 05 	cmpl   $0x5,0x203163(%rip)        # 6047a0 <num_input_strings>
  40163d:	7e 09                	jle    401648 <phase_defused+0x20>
  40163f:	83 3d 56 31 20 00 21 	cmpl   $0x21,0x203156(%rip)        # 60479c <trap>
  401646:	75 05                	jne    40164d <phase_defused+0x25>
  401648:	48 83 c4 08          	add    $0x8,%rsp
  40164c:	c3                   	retq   
  40164d:	bf 10 30 40 00       	mov    $0x403010,%edi
  401652:	e8 09 f5 ff ff       	callq  400b60 <puts@plt>
  401657:	bf 40 30 40 00       	mov    $0x403040,%edi
  40165c:	e8 ff f4 ff ff       	callq  400b60 <puts@plt>
  401661:	eb e5                	jmp    401648 <phase_defused+0x20>

0000000000401663 <explode_bomb>:
  401663:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
  40166a:	83 3d 2f 31 20 00 06 	cmpl   $0x6,0x20312f(%rip)        # 6047a0 <num_input_strings>
  401671:	77 17                	ja     40168a <explode_bomb+0x27>
  401673:	8b 05 27 31 20 00    	mov    0x203127(%rip),%eax        # 6047a0 <num_input_strings>
  401679:	ff 24 c5 08 33 40 00 	jmpq   *0x403308(,%rax,8)
  401680:	bf 2b 31 40 00       	mov    $0x40312b,%edi		//Address 1
  401685:	e8 d6 f4 ff ff       	callq  400b60 <puts@plt>
  40168a:	48 89 e7             	mov    %rsp,%rdi			//Jump addresses return here
  40168d:	b9 19 00 00 00       	mov    $0x19,%ecx
  401692:	b8 00 00 00 00       	mov    $0x0,%eax
  401697:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  40169a:	c6 04 24 53          	movb   $0x53,(%rsp)
  40169e:	c6 44 24 01 6f       	movb   $0x6f,0x1(%rsp)
  4016a3:	c6 44 24 02 20       	movb   $0x20,0x2(%rsp)
  4016a8:	c6 44 24 03 79       	movb   $0x79,0x3(%rsp)
  4016ad:	c6 44 24 04 6f       	movb   $0x6f,0x4(%rsp)
  4016b2:	c6 44 24 05 75       	movb   $0x75,0x5(%rsp)
  4016b7:	c6 44 24 06 20       	movb   $0x20,0x6(%rsp)
  4016bc:	c6 44 24 07 6d       	movb   $0x6d,0x7(%rsp)
  4016c1:	c6 44 24 08 61       	movb   $0x61,0x8(%rsp)
  4016c6:	c6 44 24 09 64       	movb   $0x64,0x9(%rsp)
  4016cb:	c6 44 24 0a 65       	movb   $0x65,0xa(%rsp)
  4016d0:	c6 44 24 0b 20       	movb   $0x20,0xb(%rsp)
  4016d5:	c6 44 24 0c 69       	movb   $0x69,0xc(%rsp)
  4016da:	c6 44 24 0d 74       	movb   $0x74,0xd(%rsp)
  4016df:	c6 44 24 0e 20       	movb   $0x20,0xe(%rsp)
  4016e4:	c6 44 24 0f 74       	movb   $0x74,0xf(%rsp)
  4016e9:	c6 44 24 10 6f       	movb   $0x6f,0x10(%rsp)
  4016ee:	c6 44 24 11 20       	movb   $0x20,0x11(%rsp)
  4016f3:	c6 44 24 12 74       	movb   $0x74,0x12(%rsp)
  4016f8:	c6 44 24 13 68       	movb   $0x68,0x13(%rsp)
  4016fd:	c6 44 24 14 65       	movb   $0x65,0x14(%rsp)
  401702:	c6 44 24 15 20       	movb   $0x20,0x15(%rsp)
  401707:	c6 44 24 16 73       	movb   $0x73,0x16(%rsp)
  40170c:	c6 44 24 17 33       	movb   $0x33,0x17(%rsp)
  401711:	c6 44 24 18 63       	movb   $0x63,0x18(%rsp)
  401716:	c6 44 24 19 72       	movb   $0x72,0x19(%rsp)
  40171b:	c6 44 24 1a 65       	movb   $0x65,0x1a(%rsp)
  401720:	c6 44 24 1b 74       	movb   $0x74,0x1b(%rsp)
  401725:	c6 44 24 1c 20       	movb   $0x20,0x1c(%rsp)
  40172a:	c6 44 24 1d 70       	movb   $0x70,0x1d(%rsp)
  40172f:	c6 44 24 1e 68       	movb   $0x68,0x1e(%rsp)
  401734:	c6 44 24 1f 61       	movb   $0x61,0x1f(%rsp)
  401739:	c6 44 24 20 73       	movb   $0x73,0x20(%rsp)
  40173e:	c6 44 24 21 65       	movb   $0x65,0x21(%rsp)
  401743:	c6 44 24 22 2e       	movb   $0x2e,0x22(%rsp)
  401748:	c6 44 24 23 20       	movb   $0x20,0x23(%rsp)
  40174d:	c6 44 24 24 20       	movb   $0x20,0x24(%rsp)
  401752:	c6 44 24 25 4e       	movb   $0x4e,0x25(%rsp)
  401757:	c6 44 24 26 69       	movb   $0x69,0x26(%rsp)
  40175c:	c6 44 24 27 63       	movb   $0x63,0x27(%rsp)
  401761:	c6 44 24 28 65       	movb   $0x65,0x28(%rsp)
  401766:	c6 44 24 29 2c       	movb   $0x2c,0x29(%rsp)
  40176b:	c6 44 24 2a 20       	movb   $0x20,0x2a(%rsp)
  401770:	c6 44 24 2b 62       	movb   $0x62,0x2b(%rsp)
  401775:	c6 44 24 2c 75       	movb   $0x75,0x2c(%rsp)
  40177a:	c6 44 24 2d 74       	movb   $0x74,0x2d(%rsp)
  40177f:	c6 44 24 2e 0a       	movb   $0xa,0x2e(%rsp)
  401784:	c6 44 24 2f 64       	movb   $0x64,0x2f(%rsp)
  401789:	c6 44 24 30 6f       	movb   $0x6f,0x30(%rsp)
  40178e:	c6 44 24 31 6e       	movb   $0x6e,0x31(%rsp)
  401793:	c6 44 24 32 27       	movb   $0x27,0x32(%rsp)
  401798:	c6 44 24 33 74       	movb   $0x74,0x33(%rsp)
  40179d:	c6 44 24 34 20       	movb   $0x20,0x34(%rsp)
  4017a2:	c6 44 24 35 74       	movb   $0x74,0x35(%rsp)
  4017a7:	c6 44 24 36 65       	movb   $0x65,0x36(%rsp)
  4017ac:	c6 44 24 37 6c       	movb   $0x6c,0x37(%rsp)
  4017b1:	c6 44 24 38 6c       	movb   $0x6c,0x38(%rsp)
  4017b6:	c6 44 24 39 20       	movb   $0x20,0x39(%rsp)
  4017bb:	c6 44 24 3a 61       	movb   $0x61,0x3a(%rsp)
  4017c0:	c6 44 24 3b 6e       	movb   $0x6e,0x3b(%rsp)
  4017c5:	c6 44 24 3c 79       	movb   $0x79,0x3c(%rsp)
  4017ca:	c6 44 24 3d 6f       	movb   $0x6f,0x3d(%rsp)
  4017cf:	c6 44 24 3e 6e       	movb   $0x6e,0x3e(%rsp)
  4017d4:	c6 44 24 3f 65       	movb   $0x65,0x3f(%rsp)
  4017d9:	c6 44 24 40 20       	movb   $0x20,0x40(%rsp)
  4017de:	c6 44 24 41 61       	movb   $0x61,0x41(%rsp)
  4017e3:	c6 44 24 42 62       	movb   $0x62,0x42(%rsp)
  4017e8:	c6 44 24 43 6f       	movb   $0x6f,0x43(%rsp)
  4017ed:	c6 44 24 44 75       	movb   $0x75,0x44(%rsp)
  4017f2:	c6 44 24 45 74       	movb   $0x74,0x45(%rsp)
  4017f7:	c6 44 24 46 20       	movb   $0x20,0x46(%rsp)
  4017fc:	c6 44 24 47 69       	movb   $0x69,0x47(%rsp)
  401801:	c6 44 24 48 74       	movb   $0x74,0x48(%rsp)
  401806:	c6 44 24 49 20       	movb   $0x20,0x49(%rsp)
  40180b:	c6 44 24 4a 28       	movb   $0x28,0x4a(%rsp)
  401810:	c6 44 24 4b 65       	movb   $0x65,0x4b(%rsp)
  401815:	c6 44 24 4c 73       	movb   $0x73,0x4c(%rsp)
  40181a:	c6 44 24 4d 70       	movb   $0x70,0x4d(%rsp)
  40181f:	c6 44 24 4e 65       	movb   $0x65,0x4e(%rsp)
  401824:	c6 44 24 4f 63       	movb   $0x63,0x4f(%rsp)
  401829:	c6 44 24 50 69       	movb   $0x69,0x50(%rsp)
  40182e:	c6 44 24 51 61       	movb   $0x61,0x51(%rsp)
  401833:	c6 44 24 52 6c       	movb   $0x6c,0x52(%rsp)
  401838:	c6 44 24 53 6c       	movb   $0x6c,0x53(%rsp)
  40183d:	c6 44 24 54 79       	movb   $0x79,0x54(%rsp)
  401842:	c6 44 24 55 20       	movb   $0x20,0x55(%rsp)
  401847:	c6 44 24 56 6f       	movb   $0x6f,0x56(%rsp)
  40184c:	c6 44 24 57 6e       	movb   $0x6e,0x57(%rsp)
  401851:	c6 44 24 58 20       	movb   $0x20,0x58(%rsp)
  401856:	c6 44 24 59 50       	movb   $0x50,0x59(%rsp)
  40185b:	c6 44 24 5a 69       	movb   $0x69,0x5a(%rsp)
  401860:	c6 44 24 5b 61       	movb   $0x61,0x5b(%rsp)
  401865:	c6 44 24 5c 7a       	movb   $0x7a,0x5c(%rsp)
  40186a:	c6 44 24 5d 7a       	movb   $0x7a,0x5d(%rsp)
  40186f:	c6 44 24 5e 61       	movb   $0x61,0x5e(%rsp)
  401874:	c6 44 24 5f 29       	movb   $0x29,0x5f(%rsp)
  401879:	c6 44 24 60 2e       	movb   $0x2e,0x60(%rsp)
  40187e:	c6 44 24 61 0a       	movb   $0xa,0x61(%rsp)
  401883:	c6 44 24 62 49       	movb   $0x49,0x62(%rsp)
  401888:	c6 44 24 63 66       	movb   $0x66,0x63(%rsp)
  40188d:	c6 44 24 64 20       	movb   $0x20,0x64(%rsp)
  401892:	c6 44 24 65 79       	movb   $0x79,0x65(%rsp)
  401897:	c6 44 24 66 6f       	movb   $0x6f,0x66(%rsp)
  40189c:	c6 44 24 67 75       	movb   $0x75,0x67(%rsp)
  4018a1:	c6 44 24 68 20       	movb   $0x20,0x68(%rsp)
  4018a6:	c6 44 24 69 64       	movb   $0x64,0x69(%rsp)
  4018ab:	c6 44 24 6a 6f       	movb   $0x6f,0x6a(%rsp)
  4018b0:	c6 44 24 6b 20       	movb   $0x20,0x6b(%rsp)
  4018b5:	c6 44 24 6c 79       	movb   $0x79,0x6c(%rsp)
  4018ba:	c6 44 24 6d 6f       	movb   $0x6f,0x6d(%rsp)
  4018bf:	c6 44 24 6e 75       	movb   $0x75,0x6e(%rsp)
  4018c4:	c6 44 24 6f 20       	movb   $0x20,0x6f(%rsp)
  4018c9:	c6 44 24 70 77       	movb   $0x77,0x70(%rsp)
  4018ce:	c6 44 24 71 6f       	movb   $0x6f,0x71(%rsp)
  4018d3:	c6 44 24 72 6e       	movb   $0x6e,0x72(%rsp)
  4018d8:	c6 44 24 73 27       	movb   $0x27,0x73(%rsp)
  4018dd:	c6 44 24 74 74       	movb   $0x74,0x74(%rsp)
  4018e2:	c6 44 24 75 20       	movb   $0x20,0x75(%rsp)
  4018e7:	c6 44 24 76 67       	movb   $0x67,0x76(%rsp)
  4018ec:	c6 44 24 77 65       	movb   $0x65,0x77(%rsp)
  4018f1:	c6 44 24 78 74       	movb   $0x74,0x78(%rsp)
  4018f6:	c6 44 24 79 20       	movb   $0x20,0x79(%rsp)
  4018fb:	c6 44 24 7a 61       	movb   $0x61,0x7a(%rsp)
  401900:	c6 44 24 7b 6e       	movb   $0x6e,0x7b(%rsp)
  401905:	c6 44 24 7c 79       	movb   $0x79,0x7c(%rsp)
  40190a:	c6 44 24 7d 20       	movb   $0x20,0x7d(%rsp)
  40190f:	c6 44 24 7e 65       	movb   $0x65,0x7e(%rsp)
  401914:	c6 44 24 7f 78       	movb   $0x78,0x7f(%rsp)
  401919:	c6 84 24 80 00 00 00 	movb   $0x74,0x80(%rsp)
  401920:	74 
  401921:	c6 84 24 81 00 00 00 	movb   $0x72,0x81(%rsp)
  401928:	72 
  401929:	c6 84 24 82 00 00 00 	movb   $0x61,0x82(%rsp)
  401930:	61 
  401931:	c6 84 24 83 00 00 00 	movb   $0x20,0x83(%rsp)
  401938:	20 
  401939:	c6 84 24 84 00 00 00 	movb   $0x63,0x84(%rsp)
  401940:	63 
  401941:	c6 84 24 85 00 00 00 	movb   $0x72,0x85(%rsp)
  401948:	72 
  401949:	c6 84 24 86 00 00 00 	movb   $0x65,0x86(%rsp)
  401950:	65 
  401951:	c6 84 24 87 00 00 00 	movb   $0x64,0x87(%rsp)
  401958:	64 
  401959:	c6 84 24 88 00 00 00 	movb   $0x69,0x88(%rsp)
  401960:	69 
  401961:	c6 84 24 89 00 00 00 	movb   $0x74,0x89(%rsp)
  401968:	74 
  401969:	c6 84 24 8a 00 00 00 	movb   $0x21,0x8a(%rsp)
  401970:	21 
  401971:	c6 84 24 8b 00 00 00 	movb   $0x20,0x8b(%rsp)
  401978:	20 
  401979:	c6 84 24 8c 00 00 00 	movb   $0x61,0x8c(%rsp)
  401980:	61 
  401981:	c6 84 24 8d 00 00 00 	movb   $0x6e,0x8d(%rsp)
  401988:	6e 
  401989:	c6 84 24 8e 00 00 00 	movb   $0x79,0x8e(%rsp)
  401990:	79 
  401991:	c6 84 24 8f 00 00 00 	movb   $0x77,0x8f(%rsp)
  401998:	77 
  401999:	c6 84 24 90 00 00 00 	movb   $0x61,0x90(%rsp)
  4019a0:	61 
  4019a1:	c6 84 24 91 00 00 00 	movb   $0x79,0x91(%rsp)
  4019a8:	79 
  4019a9:	c6 84 24 92 00 00 00 	movb   $0x73,0x92(%rsp)
  4019b0:	73 
  4019b1:	c6 84 24 93 00 00 00 	movb   $0x2c,0x93(%rsp)
  4019b8:	2c 
  4019b9:	c6 84 24 94 00 00 00 	movb   $0xa,0x94(%rsp)
  4019c0:	0a 
  4019c1:	c6 84 24 95 00 00 00 	movb   $0x66,0x95(%rsp)
  4019c8:	66 
  4019c9:	c6 84 24 96 00 00 00 	movb   $0x69,0x96(%rsp)
  4019d0:	69 
  4019d1:	c6 84 24 97 00 00 00 	movb   $0x6e,0x97(%rsp)
  4019d8:	6e 
  4019d9:	c6 84 24 98 00 00 00 	movb   $0x64,0x98(%rsp)
  4019e0:	64 
  4019e1:	c6 84 24 99 00 00 00 	movb   $0x69,0x99(%rsp)
  4019e8:	69 
  4019e9:	c6 84 24 9a 00 00 00 	movb   $0x6e,0x9a(%rsp)
  4019f0:	6e 
  4019f1:	c6 84 24 9b 00 00 00 	movb   $0x67,0x9b(%rsp)
  4019f8:	67 
  4019f9:	c6 84 24 9c 00 00 00 	movb   $0x20,0x9c(%rsp)
  401a00:	20 
  401a01:	c6 84 24 9d 00 00 00 	movb   $0x69,0x9d(%rsp)
  401a08:	69 
  401a09:	c6 84 24 9e 00 00 00 	movb   $0x74,0x9e(%rsp)
  401a10:	74 
  401a11:	c6 84 24 9f 00 00 00 	movb   $0x20,0x9f(%rsp)
  401a18:	20 
  401a19:	c6 84 24 a0 00 00 00 	movb   $0x61,0xa0(%rsp)
  401a20:	61 
  401a21:	c6 84 24 a1 00 00 00 	movb   $0x6e,0xa1(%rsp)
  401a28:	6e 
  401a29:	c6 84 24 a2 00 00 00 	movb   $0x64,0xa2(%rsp)
  401a30:	64 
  401a31:	c6 84 24 a3 00 00 00 	movb   $0x20,0xa3(%rsp)
  401a38:	20 
  401a39:	c6 84 24 a4 00 00 00 	movb   $0x73,0xa4(%rsp)
  401a40:	73 
  401a41:	c6 84 24 a5 00 00 00 	movb   $0x6f,0xa5(%rsp)
  401a48:	6f 
  401a49:	c6 84 24 a6 00 00 00 	movb   $0x6c,0xa6(%rsp)
  401a50:	6c 
  401a51:	c6 84 24 a7 00 00 00 	movb   $0x76,0xa7(%rsp)
  401a58:	76 
  401a59:	c6 84 24 a8 00 00 00 	movb   $0x69,0xa8(%rsp)
  401a60:	69 
  401a61:	c6 84 24 a9 00 00 00 	movb   $0x6e,0xa9(%rsp)
  401a68:	6e 
  401a69:	c6 84 24 aa 00 00 00 	movb   $0x67,0xaa(%rsp)
  401a70:	67 
  401a71:	c6 84 24 ab 00 00 00 	movb   $0x20,0xab(%rsp)
  401a78:	20 
  401a79:	c6 84 24 ac 00 00 00 	movb   $0x69,0xac(%rsp)
  401a80:	69 
  401a81:	c6 84 24 ad 00 00 00 	movb   $0x74,0xad(%rsp)
  401a88:	74 
  401a89:	c6 84 24 ae 00 00 00 	movb   $0x20,0xae(%rsp)
  401a90:	20 
  401a91:	c6 84 24 af 00 00 00 	movb   $0x61,0xaf(%rsp)
  401a98:	61 
  401a99:	c6 84 24 b0 00 00 00 	movb   $0x72,0xb0(%rsp)
  401aa0:	72 
  401aa1:	c6 84 24 b1 00 00 00 	movb   $0x65,0xb1(%rsp)
  401aa8:	65 
  401aa9:	c6 84 24 b2 00 00 00 	movb   $0x20,0xb2(%rsp)
  401ab0:	20 
  401ab1:	c6 84 24 b3 00 00 00 	movb   $0x71,0xb3(%rsp)
  401ab8:	71 
  401ab9:	c6 84 24 b4 00 00 00 	movb   $0x75,0xb4(%rsp)
  401ac0:	75 
  401ac1:	c6 84 24 b5 00 00 00 	movb   $0x69,0xb5(%rsp)
  401ac8:	69 
  401ac9:	c6 84 24 b6 00 00 00 	movb   $0x74,0xb6(%rsp)
  401ad0:	74 
  401ad1:	c6 84 24 b7 00 00 00 	movb   $0x65,0xb7(%rsp)
  401ad8:	65 
  401ad9:	c6 84 24 b8 00 00 00 	movb   $0x20,0xb8(%rsp)
  401ae0:	20 
  401ae1:	c6 84 24 b9 00 00 00 	movb   $0x64,0xb9(%rsp)
  401ae8:	64 
  401ae9:	c6 84 24 ba 00 00 00 	movb   $0x69,0xba(%rsp)
  401af0:	69 
  401af1:	c6 84 24 bb 00 00 00 	movb   $0x66,0xbb(%rsp)
  401af8:	66 
  401af9:	c6 84 24 bc 00 00 00 	movb   $0x66,0xbc(%rsp)
  401b00:	66 
  401b01:	c6 84 24 bd 00 00 00 	movb   $0x65,0xbd(%rsp)
  401b08:	65 
  401b09:	c6 84 24 be 00 00 00 	movb   $0x72,0xbe(%rsp)
  401b10:	72 
  401b11:	c6 84 24 bf 00 00 00 	movb   $0x65,0xbf(%rsp)
  401b18:	65 
  401b19:	c6 84 24 c0 00 00 00 	movb   $0x6e,0xc0(%rsp)
  401b20:	6e 
  401b21:	c6 84 24 c1 00 00 00 	movb   $0x74,0xc1(%rsp)
  401b28:	74 
  401b29:	c6 84 24 c2 00 00 00 	movb   $0x2e,0xc2(%rsp)
  401b30:	2e 
  401b31:	c6 84 24 c3 00 00 00 	movb   $0x2e,0xc3(%rsp)
  401b38:	2e 
  401b39:	c6 84 24 c4 00 00 00 	movb   $0x2e,0xc4(%rsp)			//p /x *(int *)($rip+0x202c58)
  401b40:	2e 
  401b41:	83 3d 58 2c 20 00 06 	cmpl   $0x6,0x202c58(%rip)        # 6047a0 <num_input_strings>
  401b48:	75 0d                	jne    401b57 <explode_bomb+0x4f4>
  401b4a:	83 3d 4b 2c 20 00 21 	cmpl   $0x21,0x202c4b(%rip)        # 60479c <trap> //last number has to be 21
  401b51:	0f 84 8c 00 00 00    	je     401be3 <explode_bomb+0x580>		//Jumps to secret phase
  401b57:	bf 85 31 40 00       	mov    $0x403185,%edi			//“BOOM!!!”				AVOID		
  401b5c:	e8 ff ef ff ff       	callq  400b60 <puts@plt>
  401b61:	bf 8e 31 40 00       	mov    $0x40318e,%edi			//“The bomb has blown up”
  401b66:	e8 f5 ef ff ff       	callq  400b60 <puts@plt>
  401b6b:	bf 00 00 00 00       	mov    $0x0,%edi
  401b70:	e8 26 fa ff ff       	callq  40159b <send_msg>			//SEND MESSAGE 
  401b75:	bf b0 30 40 00       	mov    $0x4030b0,%edi			//“Instructor has been notified”
  401b7a:	e8 e1 ef ff ff       	callq  400b60 <puts@plt>
  401b7f:	bf 08 00 00 00       	mov    $0x8,%edi
  401b84:	e8 f7 f0 ff ff       	callq  400c80 <exit@plt>								AVOID
  401b89:	bf 88 30 40 00       	mov    $0x403088,%edi			//Address 2
  401b8e:	e8 cd ef ff ff       	callq  400b60 <puts@plt>
  401b93:	e9 f2 fa ff ff       	jmpq   40168a <explode_bomb+0x27>
  401b98:	bf 30 31 40 00       	mov    $0x403130,%edi			//Address 3
  401b9d:	e8 be ef ff ff       	callq  400b60 <puts@plt>
  401ba2:	e9 e3 fa ff ff       	jmpq   40168a <explode_bomb+0x27>
  401ba7:	bf 45 31 40 00       	mov    $0x403145,%edi			//Address 4
  401bac:	e8 af ef ff ff       	callq  400b60 <puts@plt>
  401bb1:	e9 d4 fa ff ff       	jmpq   40168a <explode_bomb+0x27>
  401bb6:	bf 5b 31 40 00       	mov    $0x40315b,%edi			//Address 5
  401bbb:	e8 a0 ef ff ff       	callq  400b60 <puts@plt>
  401bc0:	e9 c5 fa ff ff       	jmpq   40168a <explode_bomb+0x27>
  401bc5:	bf 72 31 40 00       	mov    $0x403172,%edi			//Address 6
  401bca:	e8 91 ef ff ff       	callq  400b60 <puts@plt>
  401bcf:	e9 b6 fa ff ff       	jmpq   40168a <explode_bomb+0x27>
  401bd4:	bf 7b 31 40 00       	mov    $0x40317b,%edi			//Address 7
  401bd9:	e8 82 ef ff ff       	callq  400b60 <puts@plt>
  401bde:	e9 a7 fa ff ff       	jmpq   40168a <explode_bomb+0x27>
  401be3:	48 89 e7             	mov    %rsp,%rdi
  401be6:	e8 75 ef ff ff       	callq  400b60 <puts@plt>
  401beb:	e8 38 fa ff ff       	callq  401628 <phase_defused>		//DEFUSED
  401bf0:	c7 05 a2 2b 20 00 00 	movl   $0x0,0x202ba2(%rip)        # 60479c <trap>
  401bf7:	00 00 00 
  401bfa:	b8 00 00 00 00       	mov    $0x0,%eax
  401bff:	e8 66 f6 ff ff       	callq  40126a <s3cret_phase>		//get into secret phase
  401c04:	bf 00 00 00 00       	mov    $0x0,%edi
  401c09:	e8 72 f0 ff ff       	callq  400c80 <exit@plt>

0000000000401c0e <read_six_numbers>:
  401c0e:	48 83 ec 08          	sub    $0x8,%rsp
  401c12:	48 89 f2             	mov    %rsi,%rdx
  401c15:	48 8d 4e 04          	lea    0x4(%rsi),%rcx
  401c19:	48 8d 46 14          	lea    0x14(%rsi),%rax
  401c1d:	50                   	push   %rax
  401c1e:	48 8d 46 10          	lea    0x10(%rsi),%rax
  401c22:	50                   	push   %rax
  401c23:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9
  401c27:	4c 8d 46 08          	lea    0x8(%rsi),%r8
  401c2b:	be a5 31 40 00       	mov    $0x4031a5,%esi
  401c30:	b8 00 00 00 00       	mov    $0x0,%eax
  401c35:	e8 f6 ef ff ff       	callq  400c30 <__isoc99_sscanf@plt>
  401c3a:	48 83 c4 10          	add    $0x10,%rsp
  401c3e:	83 f8 05             	cmp    $0x5,%eax
  401c41:	7e 05                	jle    401c48 <read_six_numbers+0x3a>
  401c43:	48 83 c4 08          	add    $0x8,%rsp
  401c47:	c3                   	retq   
  401c48:	e8 16 fa ff ff       	callq  401663 <explode_bomb>

0000000000401c4d <read_line>:
  401c4d:	48 83 ec 08          	sub    $0x8,%rsp
  401c51:	b8 00 00 00 00       	mov    $0x0,%eax
  401c56:	e8 ff f8 ff ff       	callq  40155a <skip>
  401c5b:	48 85 c0             	test   %rax,%rax
  401c5e:	74 63                	je     401cc3 <read_line+0x76>
  401c60:	8b 35 3a 2b 20 00    	mov    0x202b3a(%rip),%esi        # 6047a0 <num_input_strings>
  401c66:	48 63 c6             	movslq %esi,%rax
  401c69:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
  401c6d:	48 c1 e2 04          	shl    $0x4,%rdx
  401c71:	48 81 c2 c0 47 60 00 	add    $0x6047c0,%rdx
  401c78:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401c7f:	b8 00 00 00 00       	mov    $0x0,%eax
  401c84:	48 89 d7             	mov    %rdx,%rdi
  401c87:	f2 ae                	repnz scas %es:(%rdi),%al
  401c89:	48 f7 d1             	not    %rcx
  401c8c:	48 83 e9 01          	sub    $0x1,%rcx
  401c90:	83 f9 4e             	cmp    $0x4e,%ecx
  401c93:	0f 8f 9c 00 00 00    	jg     401d35 <read_line+0xe8>
  401c99:	83 e9 01             	sub    $0x1,%ecx
  401c9c:	48 63 c9             	movslq %ecx,%rcx
  401c9f:	48 63 c6             	movslq %esi,%rax
  401ca2:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
  401ca6:	48 c1 e0 04          	shl    $0x4,%rax
  401caa:	c6 84 01 c0 47 60 00 	movb   $0x0,0x6047c0(%rcx,%rax,1)
  401cb1:	00 
  401cb2:	8d 46 01             	lea    0x1(%rsi),%eax
  401cb5:	89 05 e5 2a 20 00    	mov    %eax,0x202ae5(%rip)        # 6047a0 <num_input_strings>
  401cbb:	48 89 d0             	mov    %rdx,%rax
  401cbe:	48 83 c4 08          	add    $0x8,%rsp
  401cc2:	c3                   	retq   
  401cc3:	48 8b 05 be 2a 20 00 	mov    0x202abe(%rip),%rax        # 604788 <stdin@@GLIBC_2.2.5>
  401cca:	48 39 05 d7 2a 20 00 	cmp    %rax,0x202ad7(%rip)        # 6047a8 <infile>
  401cd1:	74 19                	je     401cec <read_line+0x9f>
  401cd3:	bf d5 31 40 00       	mov    $0x4031d5,%edi
  401cd8:	e8 43 ee ff ff       	callq  400b20 <getenv@plt>
  401cdd:	48 85 c0             	test   %rax,%rax
  401ce0:	74 1e                	je     401d00 <read_line+0xb3>
  401ce2:	bf 00 00 00 00       	mov    $0x0,%edi
  401ce7:	e8 94 ef ff ff       	callq  400c80 <exit@plt>
  401cec:	bf b7 31 40 00       	mov    $0x4031b7,%edi
  401cf1:	e8 6a ee ff ff       	callq  400b60 <puts@plt>
  401cf6:	bf 08 00 00 00       	mov    $0x8,%edi
  401cfb:	e8 80 ef ff ff       	callq  400c80 <exit@plt>
  401d00:	48 8b 05 81 2a 20 00 	mov    0x202a81(%rip),%rax        # 604788 <stdin@@GLIBC_2.2.5>
  401d07:	48 89 05 9a 2a 20 00 	mov    %rax,0x202a9a(%rip)        # 6047a8 <infile>
  401d0e:	b8 00 00 00 00       	mov    $0x0,%eax
  401d13:	e8 42 f8 ff ff       	callq  40155a <skip>
  401d18:	48 85 c0             	test   %rax,%rax
  401d1b:	0f 85 3f ff ff ff    	jne    401c60 <read_line+0x13>
  401d21:	bf b7 31 40 00       	mov    $0x4031b7,%edi
  401d26:	e8 35 ee ff ff       	callq  400b60 <puts@plt>
  401d2b:	bf 00 00 00 00       	mov    $0x0,%edi
  401d30:	e8 4b ef ff ff       	callq  400c80 <exit@plt>
  401d35:	bf e0 31 40 00       	mov    $0x4031e0,%edi
  401d3a:	e8 21 ee ff ff       	callq  400b60 <puts@plt>
  401d3f:	8b 05 5b 2a 20 00    	mov    0x202a5b(%rip),%eax        # 6047a0 <num_input_strings>
  401d45:	8d 50 01             	lea    0x1(%rax),%edx
  401d48:	89 15 52 2a 20 00    	mov    %edx,0x202a52(%rip)        # 6047a0 <num_input_strings>
  401d4e:	48 98                	cltq   
  401d50:	48 6b c0 50          	imul   $0x50,%rax,%rax
  401d54:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
  401d5b:	75 6e 63 
  401d5e:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
  401d65:	2a 2a 00 
  401d68:	48 89 b0 c0 47 60 00 	mov    %rsi,0x6047c0(%rax)
  401d6f:	48 89 b8 c8 47 60 00 	mov    %rdi,0x6047c8(%rax)
  401d76:	e8 e8 f8 ff ff       	callq  401663 <explode_bomb>

0000000000401d7b <sigalrm_handler>:
  401d7b:	48 83 ec 08          	sub    $0x8,%rsp
  401d7f:	ba 00 00 00 00       	mov    $0x0,%edx
  401d84:	be 40 33 40 00       	mov    $0x403340,%esi
  401d89:	48 8b 3d 00 2a 20 00 	mov    0x202a00(%rip),%rdi        # 604790 <stderr@@GLIBC_2.2.5>
  401d90:	b8 00 00 00 00       	mov    $0x0,%eax
  401d95:	e8 66 ee ff ff       	callq  400c00 <fprintf@plt>
  401d9a:	bf 01 00 00 00       	mov    $0x1,%edi
  401d9f:	e8 dc ee ff ff       	callq  400c80 <exit@plt>

0000000000401da4 <rio_readlineb>:
  401da4:	41 56                	push   %r14
  401da6:	41 55                	push   %r13
  401da8:	41 54                	push   %r12
  401daa:	55                   	push   %rbp
  401dab:	53                   	push   %rbx
  401dac:	48 89 f5             	mov    %rsi,%rbp
  401daf:	48 83 fa 01          	cmp    $0x1,%rdx
  401db3:	0f 86 9d 00 00 00    	jbe    401e56 <rio_readlineb+0xb2>
  401db9:	48 89 fb             	mov    %rdi,%rbx
  401dbc:	4c 8d 74 16 ff       	lea    -0x1(%rsi,%rdx,1),%r14
  401dc1:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  401dc7:	4c 8d 67 10          	lea    0x10(%rdi),%r12
  401dcb:	eb 17                	jmp    401de4 <rio_readlineb+0x40>
  401dcd:	e8 6e ed ff ff       	callq  400b40 <__errno_location@plt>
  401dd2:	83 38 04             	cmpl   $0x4,(%rax)
  401dd5:	74 0d                	je     401de4 <rio_readlineb+0x40>
  401dd7:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401dde:	eb 28                	jmp    401e08 <rio_readlineb+0x64>
  401de0:	4c 89 63 08          	mov    %r12,0x8(%rbx)
  401de4:	8b 43 04             	mov    0x4(%rbx),%eax
  401de7:	85 c0                	test   %eax,%eax
  401de9:	7f 2e                	jg     401e19 <rio_readlineb+0x75>
  401deb:	ba 00 20 00 00       	mov    $0x2000,%edx
  401df0:	4c 89 e6             	mov    %r12,%rsi
  401df3:	8b 3b                	mov    (%rbx),%edi
  401df5:	e8 b6 ed ff ff       	callq  400bb0 <read@plt>
  401dfa:	89 43 04             	mov    %eax,0x4(%rbx)
  401dfd:	85 c0                	test   %eax,%eax
  401dff:	78 cc                	js     401dcd <rio_readlineb+0x29>
  401e01:	75 dd                	jne    401de0 <rio_readlineb+0x3c>
  401e03:	b8 00 00 00 00       	mov    $0x0,%eax
  401e08:	85 c0                	test   %eax,%eax
  401e0a:	75 52                	jne    401e5e <rio_readlineb+0xba>
  401e0c:	b8 00 00 00 00       	mov    $0x0,%eax
  401e11:	41 83 fd 01          	cmp    $0x1,%r13d
  401e15:	75 2f                	jne    401e46 <rio_readlineb+0xa2>
  401e17:	eb 34                	jmp    401e4d <rio_readlineb+0xa9>
  401e19:	48 8b 53 08          	mov    0x8(%rbx),%rdx
  401e1d:	0f b6 0a             	movzbl (%rdx),%ecx
  401e20:	48 83 c2 01          	add    $0x1,%rdx
  401e24:	48 89 53 08          	mov    %rdx,0x8(%rbx)
  401e28:	83 e8 01             	sub    $0x1,%eax
  401e2b:	89 43 04             	mov    %eax,0x4(%rbx)
  401e2e:	48 83 c5 01          	add    $0x1,%rbp
  401e32:	88 4d ff             	mov    %cl,-0x1(%rbp)
  401e35:	80 f9 0a             	cmp    $0xa,%cl
  401e38:	74 0c                	je     401e46 <rio_readlineb+0xa2>
  401e3a:	41 83 c5 01          	add    $0x1,%r13d
  401e3e:	4c 39 f5             	cmp    %r14,%rbp
  401e41:	75 a1                	jne    401de4 <rio_readlineb+0x40>
  401e43:	4c 89 f5             	mov    %r14,%rbp
  401e46:	c6 45 00 00          	movb   $0x0,0x0(%rbp)
  401e4a:	49 63 c5             	movslq %r13d,%rax
  401e4d:	5b                   	pop    %rbx
  401e4e:	5d                   	pop    %rbp
  401e4f:	41 5c                	pop    %r12
  401e51:	41 5d                	pop    %r13
  401e53:	41 5e                	pop    %r14
  401e55:	c3                   	retq   
  401e56:	41 bd 01 00 00 00    	mov    $0x1,%r13d
  401e5c:	eb e8                	jmp    401e46 <rio_readlineb+0xa2>
  401e5e:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
  401e65:	eb e6                	jmp    401e4d <rio_readlineb+0xa9>

0000000000401e67 <submitr>:
  401e67:	41 57                	push   %r15
  401e69:	41 56                	push   %r14
  401e6b:	41 55                	push   %r13
  401e6d:	41 54                	push   %r12
  401e6f:	55                   	push   %rbp
  401e70:	53                   	push   %rbx
  401e71:	48 81 ec 68 a0 00 00 	sub    $0xa068,%rsp
  401e78:	48 89 fd             	mov    %rdi,%rbp
  401e7b:	41 89 f5             	mov    %esi,%r13d
  401e7e:	48 89 14 24          	mov    %rdx,(%rsp)
  401e82:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
  401e87:	4c 89 44 24 18       	mov    %r8,0x18(%rsp)
  401e8c:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
  401e91:	48 8b 9c 24 a0 a0 00 	mov    0xa0a0(%rsp),%rbx
  401e98:	00 
  401e99:	4c 8b bc 24 a8 a0 00 	mov    0xa0a8(%rsp),%r15
  401ea0:	00 
  401ea1:	c7 84 24 3c 20 00 00 	movl   $0x0,0x203c(%rsp)
  401ea8:	00 00 00 00 
  401eac:	ba 00 00 00 00       	mov    $0x0,%edx
  401eb1:	be 01 00 00 00       	mov    $0x1,%esi
  401eb6:	bf 02 00 00 00       	mov    $0x2,%edi
  401ebb:	e8 00 ee ff ff       	callq  400cc0 <socket@plt>
  401ec0:	85 c0                	test   %eax,%eax
  401ec2:	0f 88 2f 01 00 00    	js     401ff7 <submitr+0x190>
  401ec8:	41 89 c4             	mov    %eax,%r12d
  401ecb:	48 89 ef             	mov    %rbp,%rdi
  401ece:	e8 1d ed ff ff       	callq  400bf0 <gethostbyname@plt>
  401ed3:	48 85 c0             	test   %rax,%rax
  401ed6:	0f 84 6b 01 00 00    	je     402047 <submitr+0x1e0>
  401edc:	48 8d 8c 24 50 a0 00 	lea    0xa050(%rsp),%rcx
  401ee3:	00 
  401ee4:	48 c7 84 24 52 a0 00 	movq   $0x0,0xa052(%rsp)
  401eeb:	00 00 00 00 00 
  401ef0:	c7 84 24 5a a0 00 00 	movl   $0x0,0xa05a(%rsp)
  401ef7:	00 00 00 00 
  401efb:	66 c7 84 24 5e a0 00 	movw   $0x0,0xa05e(%rsp)
  401f02:	00 00 00 
  401f05:	66 c7 84 24 50 a0 00 	movw   $0x2,0xa050(%rsp)
  401f0c:	00 02 00 
  401f0f:	48 63 50 14          	movslq 0x14(%rax),%rdx
  401f13:	48 8b 40 18          	mov    0x18(%rax),%rax
  401f17:	48 8d 79 04          	lea    0x4(%rcx),%rdi
  401f1b:	48 8b 30             	mov    (%rax),%rsi
  401f1e:	e8 1d ed ff ff       	callq  400c40 <memmove@plt>
  401f23:	66 41 c1 cd 08       	ror    $0x8,%r13w
  401f28:	66 44 89 ac 24 52 a0 	mov    %r13w,0xa052(%rsp)
  401f2f:	00 00 
  401f31:	ba 10 00 00 00       	mov    $0x10,%edx
  401f36:	48 8d b4 24 50 a0 00 	lea    0xa050(%rsp),%rsi
  401f3d:	00 
  401f3e:	44 89 e7             	mov    %r12d,%edi
  401f41:	e8 4a ed ff ff       	callq  400c90 <connect@plt>
  401f46:	85 c0                	test   %eax,%eax
  401f48:	0f 88 64 01 00 00    	js     4020b2 <submitr+0x24b>
  401f4e:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
  401f55:	b8 00 00 00 00       	mov    $0x0,%eax
  401f5a:	4c 89 c9             	mov    %r9,%rcx
  401f5d:	48 89 df             	mov    %rbx,%rdi
  401f60:	f2 ae                	repnz scas %es:(%rdi),%al
  401f62:	48 f7 d1             	not    %rcx
  401f65:	48 89 ce             	mov    %rcx,%rsi
  401f68:	4c 89 c9             	mov    %r9,%rcx
  401f6b:	48 8b 3c 24          	mov    (%rsp),%rdi
  401f6f:	f2 ae                	repnz scas %es:(%rdi),%al
  401f71:	49 89 c8             	mov    %rcx,%r8
  401f74:	4c 89 c9             	mov    %r9,%rcx
  401f77:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  401f7c:	f2 ae                	repnz scas %es:(%rdi),%al
  401f7e:	48 f7 d1             	not    %rcx
  401f81:	48 89 ca             	mov    %rcx,%rdx
  401f84:	4c 89 c9             	mov    %r9,%rcx
  401f87:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  401f8c:	f2 ae                	repnz scas %es:(%rdi),%al
  401f8e:	4c 29 c2             	sub    %r8,%rdx
  401f91:	48 29 ca             	sub    %rcx,%rdx
  401f94:	48 8d 44 76 fd       	lea    -0x3(%rsi,%rsi,2),%rax
  401f99:	48 8d 44 02 7b       	lea    0x7b(%rdx,%rax,1),%rax
  401f9e:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
  401fa4:	0f 87 65 01 00 00    	ja     40210f <submitr+0x2a8>
  401faa:	48 8d 94 24 40 40 00 	lea    0x4040(%rsp),%rdx
  401fb1:	00 
  401fb2:	b9 00 04 00 00       	mov    $0x400,%ecx
  401fb7:	b8 00 00 00 00       	mov    $0x0,%eax
  401fbc:	48 89 d7             	mov    %rdx,%rdi
  401fbf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  401fc2:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  401fc9:	48 89 df             	mov    %rbx,%rdi
  401fcc:	f2 ae                	repnz scas %es:(%rdi),%al
  401fce:	48 f7 d1             	not    %rcx
  401fd1:	48 83 e9 01          	sub    $0x1,%rcx
  401fd5:	85 c9                	test   %ecx,%ecx
  401fd7:	0f 84 45 05 00 00    	je     402522 <submitr+0x6bb>
  401fdd:	8d 41 ff             	lea    -0x1(%rcx),%eax
  401fe0:	4c 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14
  401fe5:	48 89 d5             	mov    %rdx,%rbp
  401fe8:	49 bd d9 ff 00 00 00 	movabs $0x2000000000ffd9,%r13
  401fef:	00 20 00 
  401ff2:	e9 a5 01 00 00       	jmpq   40219c <submitr+0x335>
  401ff7:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  401ffe:	3a 20 43 
  402001:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  402008:	20 75 6e 
  40200b:	49 89 07             	mov    %rax,(%r15)
  40200e:	49 89 57 08          	mov    %rdx,0x8(%r15)
  402012:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402019:	74 6f 20 
  40201c:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
  402023:	65 20 73 
  402026:	49 89 47 10          	mov    %rax,0x10(%r15)
  40202a:	49 89 57 18          	mov    %rdx,0x18(%r15)
  40202e:	41 c7 47 20 6f 63 6b 	movl   $0x656b636f,0x20(%r15)
  402035:	65 
  402036:	66 41 c7 47 24 74 00 	movw   $0x74,0x24(%r15)
  40203d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402042:	e9 03 03 00 00       	jmpq   40234a <submitr+0x4e3>
  402047:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  40204e:	3a 20 44 
  402051:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
  402058:	20 75 6e 
  40205b:	49 89 07             	mov    %rax,(%r15)
  40205e:	49 89 57 08          	mov    %rdx,0x8(%r15)
  402062:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402069:	74 6f 20 
  40206c:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
  402073:	76 65 20 
  402076:	49 89 47 10          	mov    %rax,0x10(%r15)
  40207a:	49 89 57 18          	mov    %rdx,0x18(%r15)
  40207e:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  402085:	72 20 61 
  402088:	49 89 47 20          	mov    %rax,0x20(%r15)
  40208c:	41 c7 47 28 64 64 72 	movl   $0x65726464,0x28(%r15)
  402093:	65 
  402094:	66 41 c7 47 2c 73 73 	movw   $0x7373,0x2c(%r15)
  40209b:	41 c6 47 2e 00       	movb   $0x0,0x2e(%r15)
  4020a0:	44 89 e7             	mov    %r12d,%edi
  4020a3:	e8 f8 ea ff ff       	callq  400ba0 <close@plt>
  4020a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4020ad:	e9 98 02 00 00       	jmpq   40234a <submitr+0x4e3>
  4020b2:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
  4020b9:	3a 20 55 
  4020bc:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
  4020c3:	20 74 6f 
  4020c6:	49 89 07             	mov    %rax,(%r15)
  4020c9:	49 89 57 08          	mov    %rdx,0x8(%r15)
  4020cd:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
  4020d4:	65 63 74 
  4020d7:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
  4020de:	68 65 20 
  4020e1:	49 89 47 10          	mov    %rax,0x10(%r15)
  4020e5:	49 89 57 18          	mov    %rdx,0x18(%r15)
  4020e9:	41 c7 47 20 73 65 72 	movl   $0x76726573,0x20(%r15)
  4020f0:	76 
  4020f1:	66 41 c7 47 24 65 72 	movw   $0x7265,0x24(%r15)
  4020f8:	41 c6 47 26 00       	movb   $0x0,0x26(%r15)
  4020fd:	44 89 e7             	mov    %r12d,%edi
  402100:	e8 9b ea ff ff       	callq  400ba0 <close@plt>
  402105:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40210a:	e9 3b 02 00 00       	jmpq   40234a <submitr+0x4e3>
  40210f:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  402116:	3a 20 52 
  402119:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
  402120:	20 73 74 
  402123:	49 89 07             	mov    %rax,(%r15)
  402126:	49 89 57 08          	mov    %rdx,0x8(%r15)
  40212a:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
  402131:	74 6f 6f 
  402134:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
  40213b:	65 2e 20 
  40213e:	49 89 47 10          	mov    %rax,0x10(%r15)
  402142:	49 89 57 18          	mov    %rdx,0x18(%r15)
  402146:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
  40214d:	61 73 65 
  402150:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
  402157:	49 54 52 
  40215a:	49 89 47 20          	mov    %rax,0x20(%r15)
  40215e:	49 89 57 28          	mov    %rdx,0x28(%r15)
  402162:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
  402169:	55 46 00 
  40216c:	49 89 47 30          	mov    %rax,0x30(%r15)
  402170:	44 89 e7             	mov    %r12d,%edi
  402173:	e8 28 ea ff ff       	callq  400ba0 <close@plt>
  402178:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40217d:	e9 c8 01 00 00       	jmpq   40234a <submitr+0x4e3>
  402182:	49 0f a3 c5          	bt     %rax,%r13
  402186:	73 1e                	jae    4021a6 <submitr+0x33f>
  402188:	88 55 00             	mov    %dl,0x0(%rbp)
  40218b:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  40218f:	48 83 c3 01          	add    $0x1,%rbx
  402193:	49 39 de             	cmp    %rbx,%r14
  402196:	0f 84 86 03 00 00    	je     402522 <submitr+0x6bb>
  40219c:	0f b6 13             	movzbl (%rbx),%edx
  40219f:	8d 42 d6             	lea    -0x2a(%rdx),%eax
  4021a2:	3c 35                	cmp    $0x35,%al
  4021a4:	76 dc                	jbe    402182 <submitr+0x31b>
  4021a6:	89 d0                	mov    %edx,%eax
  4021a8:	83 e0 df             	and    $0xffffffdf,%eax
  4021ab:	83 e8 41             	sub    $0x41,%eax
  4021ae:	3c 19                	cmp    $0x19,%al
  4021b0:	76 d6                	jbe    402188 <submitr+0x321>
  4021b2:	80 fa 20             	cmp    $0x20,%dl
  4021b5:	74 45                	je     4021fc <submitr+0x395>
  4021b7:	8d 42 e0             	lea    -0x20(%rdx),%eax
  4021ba:	3c 5f                	cmp    $0x5f,%al
  4021bc:	76 09                	jbe    4021c7 <submitr+0x360>
  4021be:	80 fa 09             	cmp    $0x9,%dl
  4021c1:	0f 85 ce 02 00 00    	jne    402495 <submitr+0x62e>
  4021c7:	0f b6 d2             	movzbl %dl,%edx
  4021ca:	be 18 34 40 00       	mov    $0x403418,%esi
  4021cf:	48 8d 7c 24 28       	lea    0x28(%rsp),%rdi
  4021d4:	b8 00 00 00 00       	mov    $0x0,%eax
  4021d9:	e8 92 ea ff ff       	callq  400c70 <sprintf@plt>
  4021de:	0f b6 44 24 28       	movzbl 0x28(%rsp),%eax
  4021e3:	88 45 00             	mov    %al,0x0(%rbp)
  4021e6:	0f b6 44 24 29       	movzbl 0x29(%rsp),%eax
  4021eb:	88 45 01             	mov    %al,0x1(%rbp)
  4021ee:	0f b6 44 24 2a       	movzbl 0x2a(%rsp),%eax
  4021f3:	88 45 02             	mov    %al,0x2(%rbp)
  4021f6:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
  4021fa:	eb 93                	jmp    40218f <submitr+0x328>
  4021fc:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
  402200:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
  402204:	eb 89                	jmp    40218f <submitr+0x328>
  402206:	48 01 c5             	add    %rax,%rbp
  402209:	48 29 c3             	sub    %rax,%rbx
  40220c:	0f 84 84 03 00 00    	je     402596 <submitr+0x72f>
  402212:	48 89 da             	mov    %rbx,%rdx
  402215:	48 89 ee             	mov    %rbp,%rsi
  402218:	44 89 e7             	mov    %r12d,%edi
  40221b:	e8 50 e9 ff ff       	callq  400b70 <write@plt>
  402220:	48 85 c0             	test   %rax,%rax
  402223:	7f e1                	jg     402206 <submitr+0x39f>
  402225:	e8 16 e9 ff ff       	callq  400b40 <__errno_location@plt>
  40222a:	83 38 04             	cmpl   $0x4,(%rax)
  40222d:	0f 85 03 02 00 00    	jne    402436 <submitr+0x5cf>
  402233:	4c 89 e8             	mov    %r13,%rax
  402236:	eb ce                	jmp    402206 <submitr+0x39f>
  402238:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  40223f:	3a 20 43 
  402242:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  402249:	20 75 6e 
  40224c:	49 89 07             	mov    %rax,(%r15)
  40224f:	49 89 57 08          	mov    %rdx,0x8(%r15)
  402253:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  40225a:	74 6f 20 
  40225d:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
  402264:	66 69 72 
  402267:	49 89 47 10          	mov    %rax,0x10(%r15)
  40226b:	49 89 57 18          	mov    %rdx,0x18(%r15)
  40226f:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
  402276:	61 64 65 
  402279:	48 ba 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rdx
  402280:	6d 20 73 
  402283:	49 89 47 20          	mov    %rax,0x20(%r15)
  402287:	49 89 57 28          	mov    %rdx,0x28(%r15)
  40228b:	41 c7 47 30 65 72 76 	movl   $0x65767265,0x30(%r15)
  402292:	65 
  402293:	66 41 c7 47 34 72 00 	movw   $0x72,0x34(%r15)
  40229a:	44 89 e7             	mov    %r12d,%edi
  40229d:	e8 fe e8 ff ff       	callq  400ba0 <close@plt>
  4022a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4022a7:	e9 9e 00 00 00       	jmpq   40234a <submitr+0x4e3>
  4022ac:	ba 00 20 00 00       	mov    $0x2000,%edx
  4022b1:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  4022b8:	00 
  4022b9:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  4022c0:	00 
  4022c1:	e8 de fa ff ff       	callq  401da4 <rio_readlineb>
  4022c6:	48 85 c0             	test   %rax,%rax
  4022c9:	0f 8e 8d 00 00 00    	jle    40235c <submitr+0x4f5>
  4022cf:	80 bc 24 40 60 00 00 	cmpb   $0xd,0x6040(%rsp)
  4022d6:	0d 
  4022d7:	75 d3                	jne    4022ac <submitr+0x445>
  4022d9:	80 bc 24 41 60 00 00 	cmpb   $0xa,0x6041(%rsp)
  4022e0:	0a 
  4022e1:	75 c9                	jne    4022ac <submitr+0x445>
  4022e3:	80 bc 24 42 60 00 00 	cmpb   $0x0,0x6042(%rsp)
  4022ea:	00 
  4022eb:	75 bf                	jne    4022ac <submitr+0x445>
  4022ed:	ba 00 20 00 00       	mov    $0x2000,%edx
  4022f2:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  4022f9:	00 
  4022fa:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  402301:	00 
  402302:	e8 9d fa ff ff       	callq  401da4 <rio_readlineb>
  402307:	48 85 c0             	test   %rax,%rax
  40230a:	0f 8e b3 00 00 00    	jle    4023c3 <submitr+0x55c>
  402310:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  402317:	00 
  402318:	4c 89 ff             	mov    %r15,%rdi
  40231b:	e8 30 e8 ff ff       	callq  400b50 <strcpy@plt>
  402320:	44 89 e7             	mov    %r12d,%edi
  402323:	e8 78 e8 ff ff       	callq  400ba0 <close@plt>
  402328:	41 0f b6 07          	movzbl (%r15),%eax
  40232c:	83 e8 4f             	sub    $0x4f,%eax
  40232f:	75 0f                	jne    402340 <submitr+0x4d9>
  402331:	41 0f b6 47 01       	movzbl 0x1(%r15),%eax
  402336:	83 e8 4b             	sub    $0x4b,%eax
  402339:	75 05                	jne    402340 <submitr+0x4d9>
  40233b:	41 0f b6 47 02       	movzbl 0x2(%r15),%eax
  402340:	85 c0                	test   %eax,%eax
  402342:	0f 95 c0             	setne  %al
  402345:	0f b6 c0             	movzbl %al,%eax
  402348:	f7 d8                	neg    %eax
  40234a:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
  402351:	5b                   	pop    %rbx
  402352:	5d                   	pop    %rbp
  402353:	41 5c                	pop    %r12
  402355:	41 5d                	pop    %r13
  402357:	41 5e                	pop    %r14
  402359:	41 5f                	pop    %r15
  40235b:	c3                   	retq   
  40235c:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402363:	3a 20 43 
  402366:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  40236d:	20 75 6e 
  402370:	49 89 07             	mov    %rax,(%r15)
  402373:	49 89 57 08          	mov    %rdx,0x8(%r15)
  402377:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  40237e:	74 6f 20 
  402381:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
  402388:	68 65 61 
  40238b:	49 89 47 10          	mov    %rax,0x10(%r15)
  40238f:	49 89 57 18          	mov    %rdx,0x18(%r15)
  402393:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
  40239a:	66 72 6f 
  40239d:	48 ba 6d 20 73 65 72 	movabs $0x726576726573206d,%rdx
  4023a4:	76 65 72 
  4023a7:	49 89 47 20          	mov    %rax,0x20(%r15)
  4023ab:	49 89 57 28          	mov    %rdx,0x28(%r15)
  4023af:	41 c6 47 30 00       	movb   $0x0,0x30(%r15)
  4023b4:	44 89 e7             	mov    %r12d,%edi
  4023b7:	e8 e4 e7 ff ff       	callq  400ba0 <close@plt>
  4023bc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4023c1:	eb 87                	jmp    40234a <submitr+0x4e3>
  4023c3:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  4023ca:	3a 20 43 
  4023cd:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  4023d4:	20 75 6e 
  4023d7:	49 89 07             	mov    %rax,(%r15)
  4023da:	49 89 57 08          	mov    %rdx,0x8(%r15)
  4023de:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  4023e5:	74 6f 20 
  4023e8:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
  4023ef:	73 74 61 
  4023f2:	49 89 47 10          	mov    %rax,0x10(%r15)
  4023f6:	49 89 57 18          	mov    %rdx,0x18(%r15)
  4023fa:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
  402401:	65 73 73 
  402404:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
  40240b:	72 6f 6d 
  40240e:	49 89 47 20          	mov    %rax,0x20(%r15)
  402412:	49 89 57 28          	mov    %rdx,0x28(%r15)
  402416:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
  40241d:	65 72 00 
  402420:	49 89 47 30          	mov    %rax,0x30(%r15)
  402424:	44 89 e7             	mov    %r12d,%edi
  402427:	e8 74 e7 ff ff       	callq  400ba0 <close@plt>
  40242c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402431:	e9 14 ff ff ff       	jmpq   40234a <submitr+0x4e3>
  402436:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  40243d:	3a 20 43 
  402440:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  402447:	20 75 6e 
  40244a:	49 89 07             	mov    %rax,(%r15)
  40244d:	49 89 57 08          	mov    %rdx,0x8(%r15)
  402451:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402458:	74 6f 20 
  40245b:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
  402462:	20 74 6f 
  402465:	49 89 47 10          	mov    %rax,0x10(%r15)
  402469:	49 89 57 18          	mov    %rdx,0x18(%r15)
  40246d:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
  402474:	73 65 72 
  402477:	49 89 47 20          	mov    %rax,0x20(%r15)
  40247b:	41 c7 47 28 76 65 72 	movl   $0x726576,0x28(%r15)
  402482:	00 
  402483:	44 89 e7             	mov    %r12d,%edi
  402486:	e8 15 e7 ff ff       	callq  400ba0 <close@plt>
  40248b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402490:	e9 b5 fe ff ff       	jmpq   40234a <submitr+0x4e3>
  402495:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
  40249c:	3a 20 52 
  40249f:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
  4024a6:	20 73 74 
  4024a9:	49 89 07             	mov    %rax,(%r15)
  4024ac:	49 89 57 08          	mov    %rdx,0x8(%r15)
  4024b0:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
  4024b7:	63 6f 6e 
  4024ba:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
  4024c1:	20 61 6e 
  4024c4:	49 89 47 10          	mov    %rax,0x10(%r15)
  4024c8:	49 89 57 18          	mov    %rdx,0x18(%r15)
  4024cc:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
  4024d3:	67 61 6c 
  4024d6:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
  4024dd:	6e 70 72 
  4024e0:	49 89 47 20          	mov    %rax,0x20(%r15)
  4024e4:	49 89 57 28          	mov    %rdx,0x28(%r15)
  4024e8:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
  4024ef:	6c 65 20 
  4024f2:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
  4024f9:	63 74 65 
  4024fc:	49 89 47 30          	mov    %rax,0x30(%r15)
  402500:	49 89 57 38          	mov    %rdx,0x38(%r15)
  402504:	66 41 c7 47 40 72 2e 	movw   $0x2e72,0x40(%r15)
  40250b:	41 c6 47 42 00       	movb   $0x0,0x42(%r15)
  402510:	44 89 e7             	mov    %r12d,%edi
  402513:	e8 88 e6 ff ff       	callq  400ba0 <close@plt>
  402518:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40251d:	e9 28 fe ff ff       	jmpq   40234a <submitr+0x4e3>
  402522:	48 8d 9c 24 40 60 00 	lea    0x6040(%rsp),%rbx
  402529:	00 
  40252a:	48 83 ec 08          	sub    $0x8,%rsp
  40252e:	48 8d 84 24 48 40 00 	lea    0x4048(%rsp),%rax
  402535:	00 
  402536:	50                   	push   %rax
  402537:	4c 8b 4c 24 20       	mov    0x20(%rsp),%r9
  40253c:	4c 8b 44 24 28       	mov    0x28(%rsp),%r8
  402541:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  402546:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
  40254b:	be 98 33 40 00       	mov    $0x403398,%esi
  402550:	48 89 df             	mov    %rbx,%rdi
  402553:	b8 00 00 00 00       	mov    $0x0,%eax
  402558:	e8 13 e7 ff ff       	callq  400c70 <sprintf@plt>
  40255d:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
  402564:	b8 00 00 00 00       	mov    $0x0,%eax
  402569:	48 89 df             	mov    %rbx,%rdi
  40256c:	f2 ae                	repnz scas %es:(%rdi),%al
  40256e:	48 89 ce             	mov    %rcx,%rsi
  402571:	48 f7 d6             	not    %rsi
  402574:	48 89 f1             	mov    %rsi,%rcx
  402577:	48 83 c4 10          	add    $0x10,%rsp
  40257b:	48 8d ac 24 40 60 00 	lea    0x6040(%rsp),%rbp
  402582:	00 
  402583:	41 bd 00 00 00 00    	mov    $0x0,%r13d
  402589:	48 83 e9 01          	sub    $0x1,%rcx
  40258d:	48 89 cb             	mov    %rcx,%rbx
  402590:	0f 85 7c fc ff ff    	jne    402212 <submitr+0x3ab>
  402596:	44 89 a4 24 40 80 00 	mov    %r12d,0x8040(%rsp)
  40259d:	00 
  40259e:	c7 84 24 44 80 00 00 	movl   $0x0,0x8044(%rsp)
  4025a5:	00 00 00 00 
  4025a9:	48 8d 84 24 50 80 00 	lea    0x8050(%rsp),%rax
  4025b0:	00 
  4025b1:	48 89 84 24 48 80 00 	mov    %rax,0x8048(%rsp)
  4025b8:	00 
  4025b9:	ba 00 20 00 00       	mov    $0x2000,%edx
  4025be:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
  4025c5:	00 
  4025c6:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
  4025cd:	00 
  4025ce:	e8 d1 f7 ff ff       	callq  401da4 <rio_readlineb>
  4025d3:	48 85 c0             	test   %rax,%rax
  4025d6:	0f 8e 5c fc ff ff    	jle    402238 <submitr+0x3d1>
  4025dc:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
  4025e1:	48 8d 8c 24 3c 20 00 	lea    0x203c(%rsp),%rcx
  4025e8:	00 
  4025e9:	48 8d 94 24 40 20 00 	lea    0x2040(%rsp),%rdx
  4025f0:	00 
  4025f1:	be 1f 34 40 00       	mov    $0x40341f,%esi
  4025f6:	48 8d bc 24 40 60 00 	lea    0x6040(%rsp),%rdi
  4025fd:	00 
  4025fe:	b8 00 00 00 00       	mov    $0x0,%eax
  402603:	e8 28 e6 ff ff       	callq  400c30 <__isoc99_sscanf@plt>
  402608:	8b 94 24 3c 20 00 00 	mov    0x203c(%rsp),%edx
  40260f:	81 fa c8 00 00 00    	cmp    $0xc8,%edx
  402615:	0f 84 b4 fc ff ff    	je     4022cf <submitr+0x468>
  40261b:	48 8d 4c 24 30       	lea    0x30(%rsp),%rcx
  402620:	be 68 33 40 00       	mov    $0x403368,%esi
  402625:	4c 89 ff             	mov    %r15,%rdi
  402628:	b8 00 00 00 00       	mov    $0x0,%eax
  40262d:	e8 3e e6 ff ff       	callq  400c70 <sprintf@plt>
  402632:	44 89 e7             	mov    %r12d,%edi
  402635:	e8 66 e5 ff ff       	callq  400ba0 <close@plt>
  40263a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40263f:	e9 06 fd ff ff       	jmpq   40234a <submitr+0x4e3>

0000000000402644 <init_timeout>:
  402644:	85 ff                	test   %edi,%edi
  402646:	74 23                	je     40266b <init_timeout+0x27>
  402648:	53                   	push   %rbx
  402649:	89 fb                	mov    %edi,%ebx
  40264b:	be 7b 1d 40 00       	mov    $0x401d7b,%esi
  402650:	bf 0e 00 00 00       	mov    $0xe,%edi
  402655:	e8 86 e5 ff ff       	callq  400be0 <signal@plt>
  40265a:	85 db                	test   %ebx,%ebx
  40265c:	bf 00 00 00 00       	mov    $0x0,%edi
  402661:	0f 49 fb             	cmovns %ebx,%edi
  402664:	e8 27 e5 ff ff       	callq  400b90 <alarm@plt>
  402669:	5b                   	pop    %rbx
  40266a:	c3                   	retq   
  40266b:	c3                   	retq   

000000000040266c <init_driver>:
  40266c:	55                   	push   %rbp
  40266d:	53                   	push   %rbx
  40266e:	48 83 ec 18          	sub    $0x18,%rsp
  402672:	48 89 fd             	mov    %rdi,%rbp
  402675:	be 01 00 00 00       	mov    $0x1,%esi
  40267a:	bf 0d 00 00 00       	mov    $0xd,%edi
  40267f:	e8 5c e5 ff ff       	callq  400be0 <signal@plt>
  402684:	be 01 00 00 00       	mov    $0x1,%esi
  402689:	bf 1d 00 00 00       	mov    $0x1d,%edi
  40268e:	e8 4d e5 ff ff       	callq  400be0 <signal@plt>
  402693:	be 01 00 00 00       	mov    $0x1,%esi
  402698:	bf 1d 00 00 00       	mov    $0x1d,%edi
  40269d:	e8 3e e5 ff ff       	callq  400be0 <signal@plt>
  4026a2:	ba 00 00 00 00       	mov    $0x0,%edx
  4026a7:	be 01 00 00 00       	mov    $0x1,%esi
  4026ac:	bf 02 00 00 00       	mov    $0x2,%edi
  4026b1:	e8 0a e6 ff ff       	callq  400cc0 <socket@plt>
  4026b6:	85 c0                	test   %eax,%eax
  4026b8:	0f 88 83 00 00 00    	js     402741 <init_driver+0xd5>
  4026be:	89 c3                	mov    %eax,%ebx
  4026c0:	bf 8e 32 40 00       	mov    $0x40328e,%edi
  4026c5:	e8 26 e5 ff ff       	callq  400bf0 <gethostbyname@plt>
  4026ca:	48 85 c0             	test   %rax,%rax
  4026cd:	0f 84 ba 00 00 00    	je     40278d <init_driver+0x121>
  4026d3:	48 c7 44 24 02 00 00 	movq   $0x0,0x2(%rsp)
  4026da:	00 00 
  4026dc:	c7 44 24 0a 00 00 00 	movl   $0x0,0xa(%rsp)
  4026e3:	00 
  4026e4:	66 c7 44 24 0e 00 00 	movw   $0x0,0xe(%rsp)
  4026eb:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
  4026f1:	48 63 50 14          	movslq 0x14(%rax),%rdx
  4026f5:	48 8b 40 18          	mov    0x18(%rax),%rax
  4026f9:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
  4026fe:	48 8b 30             	mov    (%rax),%rsi
  402701:	e8 3a e5 ff ff       	callq  400c40 <memmove@plt>
  402706:	66 c7 44 24 02 3b 6e 	movw   $0x6e3b,0x2(%rsp)
  40270d:	ba 10 00 00 00       	mov    $0x10,%edx
  402712:	48 89 e6             	mov    %rsp,%rsi
  402715:	89 df                	mov    %ebx,%edi
  402717:	e8 74 e5 ff ff       	callq  400c90 <connect@plt>
  40271c:	85 c0                	test   %eax,%eax
  40271e:	0f 88 d1 00 00 00    	js     4027f5 <init_driver+0x189>
  402724:	89 df                	mov    %ebx,%edi
  402726:	e8 75 e4 ff ff       	callq  400ba0 <close@plt>
  40272b:	66 c7 45 00 4f 4b    	movw   $0x4b4f,0x0(%rbp)
  402731:	c6 45 02 00          	movb   $0x0,0x2(%rbp)
  402735:	b8 00 00 00 00       	mov    $0x0,%eax
  40273a:	48 83 c4 18          	add    $0x18,%rsp
  40273e:	5b                   	pop    %rbx
  40273f:	5d                   	pop    %rbp
  402740:	c3                   	retq   
  402741:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
  402748:	3a 20 43 
  40274b:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
  402752:	20 75 6e 
  402755:	48 89 45 00          	mov    %rax,0x0(%rbp)
  402759:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  40275d:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  402764:	74 6f 20 
  402767:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
  40276e:	65 20 73 
  402771:	48 89 45 10          	mov    %rax,0x10(%rbp)
  402775:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  402779:	c7 45 20 6f 63 6b 65 	movl   $0x656b636f,0x20(%rbp)
  402780:	66 c7 45 24 74 00    	movw   $0x74,0x24(%rbp)
  402786:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  40278b:	eb ad                	jmp    40273a <init_driver+0xce>
  40278d:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
  402794:	3a 20 44 
  402797:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
  40279e:	20 75 6e 
  4027a1:	48 89 45 00          	mov    %rax,0x0(%rbp)
  4027a5:	48 89 55 08          	mov    %rdx,0x8(%rbp)
  4027a9:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
  4027b0:	74 6f 20 
  4027b3:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
  4027ba:	76 65 20 
  4027bd:	48 89 45 10          	mov    %rax,0x10(%rbp)
  4027c1:	48 89 55 18          	mov    %rdx,0x18(%rbp)
  4027c5:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
  4027cc:	72 20 61 
  4027cf:	48 89 45 20          	mov    %rax,0x20(%rbp)
  4027d3:	c7 45 28 64 64 72 65 	movl   $0x65726464,0x28(%rbp)
  4027da:	66 c7 45 2c 73 73    	movw   $0x7373,0x2c(%rbp)
  4027e0:	c6 45 2e 00          	movb   $0x0,0x2e(%rbp)
  4027e4:	89 df                	mov    %ebx,%edi
  4027e6:	e8 b5 e3 ff ff       	callq  400ba0 <close@plt>
  4027eb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4027f0:	e9 45 ff ff ff       	jmpq   40273a <init_driver+0xce>
  4027f5:	ba 8e 32 40 00       	mov    $0x40328e,%edx
  4027fa:	be f0 33 40 00       	mov    $0x4033f0,%esi
  4027ff:	48 89 ef             	mov    %rbp,%rdi
  402802:	b8 00 00 00 00       	mov    $0x0,%eax
  402807:	e8 64 e4 ff ff       	callq  400c70 <sprintf@plt>
  40280c:	89 df                	mov    %ebx,%edi
  40280e:	e8 8d e3 ff ff       	callq  400ba0 <close@plt>
  402813:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  402818:	e9 1d ff ff ff       	jmpq   40273a <init_driver+0xce>

000000000040281d <driver_post>:
  40281d:	53                   	push   %rbx
  40281e:	4c 89 c3             	mov    %r8,%rbx
  402821:	85 c9                	test   %ecx,%ecx
  402823:	75 17                	jne    40283c <driver_post+0x1f>
  402825:	48 85 ff             	test   %rdi,%rdi
  402828:	74 05                	je     40282f <driver_post+0x12>
  40282a:	80 3f 00             	cmpb   $0x0,(%rdi)
  40282d:	75 2f                	jne    40285e <driver_post+0x41>
  40282f:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  402834:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  402838:	89 c8                	mov    %ecx,%eax
  40283a:	5b                   	pop    %rbx
  40283b:	c3                   	retq   
  40283c:	48 89 d6             	mov    %rdx,%rsi
  40283f:	bf 30 34 40 00       	mov    $0x403430,%edi
  402844:	b8 00 00 00 00       	mov    $0x0,%eax
  402849:	e8 32 e3 ff ff       	callq  400b80 <printf@plt>
  40284e:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
  402853:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
  402857:	b8 00 00 00 00       	mov    $0x0,%eax
  40285c:	eb dc                	jmp    40283a <driver_post+0x1d>
  40285e:	41 50                	push   %r8
  402860:	52                   	push   %rdx
  402861:	41 b9 47 34 40 00    	mov    $0x403447,%r9d
  402867:	49 89 f0             	mov    %rsi,%r8
  40286a:	48 89 f9             	mov    %rdi,%rcx
  40286d:	ba 4b 34 40 00       	mov    $0x40344b,%edx
  402872:	be 6e 3b 00 00       	mov    $0x3b6e,%esi
  402877:	bf 8e 32 40 00       	mov    $0x40328e,%edi
  40287c:	e8 e6 f5 ff ff       	callq  401e67 <submitr>
  402881:	48 83 c4 10          	add    $0x10,%rsp
  402885:	eb b3                	jmp    40283a <driver_post+0x1d>
  402887:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40288e:	00 00 

0000000000402890 <__libc_csu_init>:
  402890:	41 57                	push   %r15
  402892:	41 89 ff             	mov    %edi,%r15d
  402895:	41 56                	push   %r14
  402897:	49 89 f6             	mov    %rsi,%r14
  40289a:	41 55                	push   %r13
  40289c:	49 89 d5             	mov    %rdx,%r13
  40289f:	41 54                	push   %r12
  4028a1:	4c 8d 25 70 15 20 00 	lea    0x201570(%rip),%r12        # 603e18 <__frame_dummy_init_array_entry>
  4028a8:	55                   	push   %rbp
  4028a9:	48 8d 2d 70 15 20 00 	lea    0x201570(%rip),%rbp        # 603e20 <__init_array_end>
  4028b0:	53                   	push   %rbx
  4028b1:	4c 29 e5             	sub    %r12,%rbp
  4028b4:	31 db                	xor    %ebx,%ebx
  4028b6:	48 c1 fd 03          	sar    $0x3,%rbp
  4028ba:	48 83 ec 08          	sub    $0x8,%rsp
  4028be:	e8 25 e2 ff ff       	callq  400ae8 <_init>
  4028c3:	48 85 ed             	test   %rbp,%rbp
  4028c6:	74 1e                	je     4028e6 <__libc_csu_init+0x56>
  4028c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4028cf:	00 
  4028d0:	4c 89 ea             	mov    %r13,%rdx
  4028d3:	4c 89 f6             	mov    %r14,%rsi
  4028d6:	44 89 ff             	mov    %r15d,%edi
  4028d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4028dd:	48 83 c3 01          	add    $0x1,%rbx
  4028e1:	48 39 eb             	cmp    %rbp,%rbx
  4028e4:	75 ea                	jne    4028d0 <__libc_csu_init+0x40>
  4028e6:	48 83 c4 08          	add    $0x8,%rsp
  4028ea:	5b                   	pop    %rbx
  4028eb:	5d                   	pop    %rbp
  4028ec:	41 5c                	pop    %r12
  4028ee:	41 5d                	pop    %r13
  4028f0:	41 5e                	pop    %r14
  4028f2:	41 5f                	pop    %r15
  4028f4:	c3                   	retq   
  4028f5:	90                   	nop
  4028f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4028fd:	00 00 00 

0000000000402900 <__libc_csu_fini>:
  402900:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000402904 <_fini>:
  402904:	48 83 ec 08          	sub    $0x8,%rsp
  402908:	48 83 c4 08          	add    $0x8,%rsp
  40290c:	c3                   	retq   
